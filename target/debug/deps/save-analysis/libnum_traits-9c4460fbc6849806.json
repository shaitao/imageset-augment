{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"num_traits","disambiguator":[14704426329127304331,17440273846275572684]},"crate_root":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src","external_crates":[{"file_name":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[7815101698501615915,7269057560512426664]}},{"file_name":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/lib.rs","num":2,"id":{"name":"std","disambiguator":[6046355664359651485,8019317904245726114]}},{"file_name":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/lib.rs","num":3,"id":{"name":"alloc","disambiguator":[6488192985416488746,4334068749110286993]}},{"file_name":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/lib.rs","num":4,"id":{"name":"std_unicode","disambiguator":[6239878433378224093,4725150213046474651]}},{"file_name":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[3654356015412279335,6542799514095247760]}},{"file_name":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[11413161404991323142,16701209680428503050]}},{"file_name":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10745761987360861240,10200100914005756373]}},{"file_name":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/lib.rs","num":8,"id":{"name":"compiler_builtins","disambiguator":[959187132073715980,12093721138903202214]}},{"file_name":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/lib.rs","num":9,"id":{"name":"alloc_jemalloc","disambiguator":[1760574447609064231,794097210815675550]}},{"file_name":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[8824402873655609231,16758565762683860168]}}],"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":472,"byte_end":16436,"line_start":11,"line_end":473,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":928,"byte_end":935,"line_start":30,"line_end":30,"column_start":17,"column_end":24},"name":"Bounded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":540},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":976,"byte_end":981,"line_start":32,"line_end":32,"column_start":16,"column_end":21},"name":"Float","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2588},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":998,"byte_end":1008,"line_start":33,"line_end":33,"column_start":16,"column_end":26},"name":"FloatConst","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1123,"byte_end":1127,"line_start":35,"line_end":35,"column_start":22,"column_end":26},"name":"Zero","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1129,"byte_end":1132,"line_start":35,"line_end":35,"column_start":28,"column_end":31},"name":"One","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1134,"byte_end":1138,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"name":"zero","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":166},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1140,"byte_end":1143,"line_start":35,"line_end":35,"column_start":39,"column_end":42},"name":"one","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":326},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1164,"byte_end":1167,"line_start":36,"line_end":36,"column_start":19,"column_end":22},"name":"Inv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":248},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1192,"byte_end":1202,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"name":"CheckedAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":254},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1204,"byte_end":1214,"line_start":37,"line_end":37,"column_start":36,"column_end":46},"name":"CheckedSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":258},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1216,"byte_end":1226,"line_start":37,"line_end":37,"column_start":48,"column_end":58},"name":"CheckedMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":262},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1228,"byte_end":1238,"line_start":37,"line_end":37,"column_start":60,"column_end":70},"name":"CheckedDiv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":266},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1263,"byte_end":1273,"line_start":38,"line_end":38,"column_start":24,"column_end":34},"name":"CheckedRem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":272},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1275,"byte_end":1285,"line_start":38,"line_end":38,"column_start":36,"column_end":46},"name":"CheckedNeg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":276},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1287,"byte_end":1297,"line_start":38,"line_end":38,"column_start":48,"column_end":58},"name":"CheckedShl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1299,"byte_end":1309,"line_start":38,"line_end":38,"column_start":60,"column_end":70},"name":"CheckedShr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1336,"byte_end":1347,"line_start":39,"line_end":39,"column_start":25,"column_end":36},"name":"WrappingAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":308},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1349,"byte_end":1360,"line_start":39,"line_end":39,"column_start":38,"column_end":49},"name":"WrappingMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":304},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1362,"byte_end":1373,"line_start":39,"line_end":39,"column_start":51,"column_end":62},"name":"WrappingSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1399,"byte_end":1405,"line_start":40,"line_end":40,"column_start":24,"column_end":30},"name":"MulAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":364},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1407,"byte_end":1419,"line_start":40,"line_end":40,"column_start":32,"column_end":44},"name":"MulAddAssign","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":222},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1447,"byte_end":1457,"line_start":41,"line_end":41,"column_start":26,"column_end":36},"name":"Saturating","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1474,"byte_end":1480,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"name":"Signed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":212},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1482,"byte_end":1490,"line_start":42,"line_end":42,"column_start":24,"column_end":32},"name":"Unsigned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1492,"byte_end":1495,"line_start":42,"line_end":42,"column_start":34,"column_end":37},"name":"abs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":208},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1497,"byte_end":1504,"line_start":42,"line_end":42,"column_start":39,"column_end":46},"name":"abs_sub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":210},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1506,"byte_end":1512,"line_start":42,"line_end":42,"column_start":48,"column_end":54},"name":"signum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":920},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1530,"byte_end":1541,"line_start":43,"line_end":43,"column_start":16,"column_end":27},"name":"AsPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":868},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1543,"byte_end":1556,"line_start":43,"line_end":43,"column_start":29,"column_end":42},"name":"FromPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":818},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1558,"byte_end":1569,"line_start":43,"line_end":43,"column_start":44,"column_end":55},"name":"ToPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":910},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1571,"byte_end":1578,"line_start":43,"line_end":43,"column_start":57,"column_end":64},"name":"NumCast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":908},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1580,"byte_end":1584,"line_start":43,"line_end":43,"column_start":66,"column_end":70},"name":"cast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":954},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1600,"byte_end":1607,"line_start":44,"line_end":44,"column_start":14,"column_end":21},"name":"PrimInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1002},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1623,"byte_end":1626,"line_start":45,"line_end":45,"column_start":15,"column_end":18},"name":"Pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1014},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1628,"byte_end":1631,"line_start":45,"line_end":45,"column_start":20,"column_end":23},"name":"pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1016},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1633,"byte_end":1644,"line_start":45,"line_end":45,"column_start":25,"column_end":36},"name":"checked_pow","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":472,"byte_end":16436,"line_start":11,"line_end":473,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":20},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":72},{"krate":0,"index":80},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":100},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":122},{"krate":0,"index":128},{"krate":0,"index":168},{"krate":0,"index":218},{"krate":0,"index":392},{"krate":0,"index":452},{"krate":0,"index":664},{"krate":0,"index":774},{"krate":0,"index":926},{"krate":0,"index":990},{"krate":0,"index":1020},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":7160},{"krate":0,"index":7166},{"krate":0,"index":7172},{"krate":0,"index":7178},{"krate":0,"index":7184},{"krate":0,"index":7190},{"krate":0,"index":7196},{"krate":0,"index":7202},{"krate":0,"index":7208},{"krate":0,"index":7214},{"krate":0,"index":7220},{"krate":0,"index":7226},{"krate":0,"index":1052},{"krate":0,"index":7232},{"krate":0,"index":7234},{"krate":0,"index":7238},{"krate":0,"index":7240},{"krate":0,"index":1058},{"krate":0,"index":1062},{"krate":0,"index":7244},{"krate":0,"index":7258},{"krate":0,"index":1064}],"decl_id":null,"docs":" Numeric traits for generic mathematics","sig":null,"attributes":[{"value":"deny(unconditional_recursion)","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":668,"byte_end":701,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"no_std","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":703,"byte_end":713,"line_start":21,"line_end":21,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":128},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"identities","qualname":"::identities","value":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/identities.rs","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":144},{"krate":0,"index":1066},{"krate":0,"index":1072},{"krate":0,"index":1078},{"krate":0,"index":1084},{"krate":0,"index":1090},{"krate":0,"index":1096},{"krate":0,"index":1102},{"krate":0,"index":1108},{"krate":0,"index":1114},{"krate":0,"index":1120},{"krate":0,"index":1126},{"krate":0,"index":1132},{"krate":0,"index":1138},{"krate":0,"index":1144},{"krate":0,"index":146},{"krate":0,"index":152},{"krate":0,"index":158},{"krate":0,"index":1150},{"krate":0,"index":1154},{"krate":0,"index":1158},{"krate":0,"index":1162},{"krate":0,"index":1166},{"krate":0,"index":1170},{"krate":0,"index":1174},{"krate":0,"index":1178},{"krate":0,"index":1182},{"krate":0,"index":1186},{"krate":0,"index":1190},{"krate":0,"index":1194},{"krate":0,"index":1198},{"krate":0,"index":1202},{"krate":0,"index":160},{"krate":0,"index":164},{"krate":0,"index":166}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":138},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":17812,"byte_end":17816,"line_start":5,"line_end":5,"column_start":11,"column_end":15},"name":"Zero","qualname":"::identities::Zero","value":"Zero: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":142}],"decl_id":null,"docs":" Defines an additive identity element for `Self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":18334,"byte_end":18338,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"zero","qualname":"::identities::Zero::zero","value":"fn () -> Self","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" Defines an additive identity element for `Self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":18440,"byte_end":18447,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::identities::Zero::is_zero","value":"fn (&self) -> bool","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" Defines an additive identity element for `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":152},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":19315,"byte_end":19318,"line_start":69,"line_end":69,"column_start":11,"column_end":14},"name":"One","qualname":"::identities::One","value":"One: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":156}],"decl_id":null,"docs":" Defines a multiplicative identity element for `Self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":19842,"byte_end":19845,"line_start":85,"line_end":85,"column_start":8,"column_end":11},"name":"one","qualname":"::identities::One::one","value":"fn () -> Self","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Defines a multiplicative identity element for `Self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":20154,"byte_end":20160,"line_start":93,"line_end":93,"column_start":8,"column_end":14},"name":"is_one","qualname":"::identities::One::is_one","value":"fn (&self) -> bool","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Defines a multiplicative identity element for `Self`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":164},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":20988,"byte_end":20992,"line_start":135,"line_end":135,"column_start":26,"column_end":30},"name":"zero","qualname":"::identities::zero","value":"fn <T> () -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the additive identity, `0`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":20963,"byte_end":20980,"line_start":135,"line_end":135,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":166},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":21098,"byte_end":21101,"line_start":138,"line_end":138,"column_start":26,"column_end":29},"name":"one","qualname":"::identities::one","value":"fn <T> () -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative identity, `1`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":21073,"byte_end":21090,"line_start":138,"line_end":138,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":168},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sign","qualname":"::sign","value":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/sign.rs","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":190},{"krate":0,"index":1206},{"krate":0,"index":1218},{"krate":0,"index":1230},{"krate":0,"index":1242},{"krate":0,"index":1254},{"krate":0,"index":1266},{"krate":0,"index":192},{"krate":0,"index":204},{"krate":0,"index":1278},{"krate":0,"index":1290},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":1302},{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":1308},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":216}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":178},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":22027,"byte_end":22033,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Signed","qualname":"::sign::Signed","value":"Signed: Sized + Num + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188}],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":22286,"byte_end":22289,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::Signed::abs","value":"fn (&self) -> Self","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":22514,"byte_end":22521,"line_start":20,"line_end":20,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::Signed::abs_sub","value":"fn (&self, other: &Self) -> Self","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":22979,"byte_end":22985,"line_start":35,"line_end":35,"column_start":8,"column_end":14},"name":"signum","qualname":"::sign::Signed::signum","value":"fn (&self) -> Self","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":23102,"byte_end":23113,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"is_positive","qualname":"::sign::Signed::is_positive","value":"fn (&self) -> bool","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":23230,"byte_end":23241,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"is_negative","qualname":"::sign::Signed::is_negative","value":"fn (&self) -> bool","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":206},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":26275,"byte_end":26278,"line_start":151,"line_end":151,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::abs","value":"fn <T> (value: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":26250,"byte_end":26267,"line_start":150,"line_end":150,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":208},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":26515,"byte_end":26522,"line_start":160,"line_end":160,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::abs_sub","value":"fn <T> (x: T, y: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":26490,"byte_end":26507,"line_start":159,"line_end":159,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":210},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":26966,"byte_end":26972,"line_start":177,"line_end":177,"column_start":26,"column_end":32},"name":"signum","qualname":"::sign::signum","value":"fn <T> (value: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the sign of the number.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":26941,"byte_end":26958,"line_start":177,"line_end":177,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":212},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":27077,"byte_end":27085,"line_start":180,"line_end":180,"column_start":11,"column_end":19},"name":"Unsigned","qualname":"::sign::Unsigned","value":"Unsigned: Num","parent":null,"children":[],"decl_id":null,"docs":" A trait for values which cannot be negative\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":218},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ops","qualname":"::ops","value":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/ops/mod.rs","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":230},{"krate":0,"index":286},{"krate":0,"index":324},{"krate":0,"index":356}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":220},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,115,97,116,117,114,97,116,105,110,103,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"saturating","qualname":"::ops::saturating","value":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/ops/saturating.rs","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":228},{"krate":0,"index":1314},{"krate":0,"index":1320},{"krate":0,"index":1326},{"krate":0,"index":1332},{"krate":0,"index":1338},{"krate":0,"index":1344},{"krate":0,"index":1350},{"krate":0,"index":1356},{"krate":0,"index":1362},{"krate":0,"index":1368},{"krate":0,"index":1374},{"krate":0,"index":1380}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":222},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,115,97,116,117,114,97,116,105,110,103,46,114,115],"byte_start":27937,"byte_end":27947,"line_start":2,"line_end":2,"column_start":11,"column_end":21},"name":"Saturating","qualname":"::ops::saturating::Saturating","value":"Saturating","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":226}],"decl_id":null,"docs":" Saturating math operations\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,115,97,116,117,114,97,116,105,110,103,46,114,115],"byte_start":28073,"byte_end":28087,"line_start":5,"line_end":5,"column_start":8,"column_end":22},"name":"saturating_add","qualname":"::ops::saturating::Saturating::saturating_add","value":"fn (self, v: Self) -> Self","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Saturating math operations\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,115,97,116,117,114,97,116,105,110,103,46,114,115],"byte_start":28239,"byte_end":28253,"line_start":9,"line_end":9,"column_start":8,"column_end":22},"name":"saturating_sub","qualname":"::ops::saturating::Saturating::saturating_sub","value":"fn (self, v: Self) -> Self","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Saturating math operations\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":230},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"checked","qualname":"::ops::checked","value":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/ops/checked.rs","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":248},{"krate":0,"index":252},{"krate":0,"index":1386},{"krate":0,"index":1390},{"krate":0,"index":1394},{"krate":0,"index":1398},{"krate":0,"index":1402},{"krate":0,"index":1406},{"krate":0,"index":1410},{"krate":0,"index":1414},{"krate":0,"index":1418},{"krate":0,"index":1422},{"krate":0,"index":1426},{"krate":0,"index":1430},{"krate":0,"index":254},{"krate":0,"index":1434},{"krate":0,"index":1438},{"krate":0,"index":1442},{"krate":0,"index":1446},{"krate":0,"index":1450},{"krate":0,"index":1454},{"krate":0,"index":1458},{"krate":0,"index":1462},{"krate":0,"index":1466},{"krate":0,"index":1470},{"krate":0,"index":1474},{"krate":0,"index":1478},{"krate":0,"index":258},{"krate":0,"index":1482},{"krate":0,"index":1486},{"krate":0,"index":1490},{"krate":0,"index":1494},{"krate":0,"index":1498},{"krate":0,"index":1502},{"krate":0,"index":1506},{"krate":0,"index":1510},{"krate":0,"index":1514},{"krate":0,"index":1518},{"krate":0,"index":1522},{"krate":0,"index":1526},{"krate":0,"index":262},{"krate":0,"index":1530},{"krate":0,"index":1534},{"krate":0,"index":1538},{"krate":0,"index":1542},{"krate":0,"index":1546},{"krate":0,"index":1550},{"krate":0,"index":1554},{"krate":0,"index":1558},{"krate":0,"index":1562},{"krate":0,"index":1566},{"krate":0,"index":1570},{"krate":0,"index":1574},{"krate":0,"index":266},{"krate":0,"index":1578},{"krate":0,"index":1582},{"krate":0,"index":1586},{"krate":0,"index":1590},{"krate":0,"index":1594},{"krate":0,"index":1598},{"krate":0,"index":1602},{"krate":0,"index":1606},{"krate":0,"index":1610},{"krate":0,"index":1614},{"krate":0,"index":1618},{"krate":0,"index":1622},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":1626},{"krate":0,"index":1630},{"krate":0,"index":1634},{"krate":0,"index":1638},{"krate":0,"index":1642},{"krate":0,"index":1646},{"krate":0,"index":1650},{"krate":0,"index":1654},{"krate":0,"index":1658},{"krate":0,"index":1662},{"krate":0,"index":1666},{"krate":0,"index":1670},{"krate":0,"index":276},{"krate":0,"index":280},{"krate":0,"index":1674},{"krate":0,"index":1678},{"krate":0,"index":1682},{"krate":0,"index":1686},{"krate":0,"index":1690},{"krate":0,"index":1694},{"krate":0,"index":1698},{"krate":0,"index":1702},{"krate":0,"index":1706},{"krate":0,"index":1710},{"krate":0,"index":1714},{"krate":0,"index":1718},{"krate":0,"index":282},{"krate":0,"index":1722},{"krate":0,"index":1726},{"krate":0,"index":1730},{"krate":0,"index":1734},{"krate":0,"index":1738},{"krate":0,"index":1742},{"krate":0,"index":1746},{"krate":0,"index":1750},{"krate":0,"index":1754},{"krate":0,"index":1758},{"krate":0,"index":1762},{"krate":0,"index":1766}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":248},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":28974,"byte_end":28984,"line_start":5,"line_end":5,"column_start":11,"column_end":21},"name":"CheckedAdd","qualname":"::ops::checked::CheckedAdd","value":"CheckedAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":250}],"decl_id":null,"docs":" Performs addition that returns `None` instead of wrapping around on\n overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":29124,"byte_end":29135,"line_start":8,"line_end":8,"column_start":8,"column_end":19},"name":"checked_add","qualname":"::ops::checked::CheckedAdd::checked_add","value":"fn (&self, v: &Self) -> Option<Self>","parent":{"krate":0,"index":248},"children":[],"decl_id":null,"docs":" Performs addition that returns `None` instead of wrapping around on\n overflow.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":254},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":30112,"byte_end":30122,"line_start":39,"line_end":39,"column_start":11,"column_end":21},"name":"CheckedSub","qualname":"::ops::checked::CheckedSub","value":"CheckedSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":256}],"decl_id":null,"docs":" Performs subtraction that returns `None` instead of wrapping around on underflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":30269,"byte_end":30280,"line_start":42,"line_end":42,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"::ops::checked::CheckedSub::checked_sub","value":"fn (&self, v: &Self) -> Option<Self>","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Performs subtraction that returns `None` instead of wrapping around on underflow.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":258},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":31013,"byte_end":31023,"line_start":63,"line_end":63,"column_start":11,"column_end":21},"name":"CheckedMul","qualname":"::ops::checked::CheckedMul","value":"CheckedMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":260}],"decl_id":null,"docs":" Performs multiplication that returns `None` instead of wrapping around on underflow or\n overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":31195,"byte_end":31206,"line_start":66,"line_end":66,"column_start":8,"column_end":19},"name":"checked_mul","qualname":"::ops::checked::CheckedMul::checked_mul","value":"fn (&self, v: &Self) -> Option<Self>","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Performs multiplication that returns `None` instead of wrapping around on underflow or\n overflow.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":262},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":31979,"byte_end":31989,"line_start":87,"line_end":87,"column_start":11,"column_end":21},"name":"CheckedDiv","qualname":"::ops::checked::CheckedDiv","value":"CheckedDiv: Sized + Div<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":264}],"decl_id":null,"docs":" Performs division that returns `None` instead of panicking on division by zero and instead of\n wrapping around on underflow and overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":32167,"byte_end":32178,"line_start":90,"line_end":90,"column_start":8,"column_end":19},"name":"checked_div","qualname":"::ops::checked::CheckedDiv::checked_div","value":"fn (&self, v: &Self) -> Option<Self>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Performs division that returns `None` instead of panicking on division by zero and instead of\n wrapping around on underflow and overflow.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":266},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":32964,"byte_end":32974,"line_start":111,"line_end":111,"column_start":11,"column_end":21},"name":"CheckedRem","qualname":"::ops::checked::CheckedRem","value":"CheckedRem: Sized + Rem<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":268}],"decl_id":null,"docs":" Performs an integral remainder that returns `None` instead of panicking on division by zero and\n instead of wrapping around on underflow and overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":33768,"byte_end":33779,"line_start":131,"line_end":131,"column_start":8,"column_end":19},"name":"checked_rem","qualname":"::ops::checked::CheckedRem::checked_rem","value":"fn (&self, v: &Self) -> Option<Self>","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" Performs an integral remainder that returns `None` instead of panicking on division by zero and\n instead of wrapping around on underflow and overflow.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":272},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":34742,"byte_end":34752,"line_start":162,"line_end":162,"column_start":11,"column_end":21},"name":"CheckedNeg","qualname":"::ops::checked::CheckedNeg","value":"CheckedNeg: Sized","parent":null,"children":[{"krate":0,"index":274}],"decl_id":null,"docs":" Performs negation that returns `None` if the result can't be represented.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":35402,"byte_end":35413,"line_start":179,"line_end":179,"column_start":8,"column_end":19},"name":"checked_neg","qualname":"::ops::checked::CheckedNeg::checked_neg","value":"fn (&self) -> Option<Self>","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":" Performs negation that returns `None` if the result can't be represented.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":276},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":36162,"byte_end":36172,"line_start":199,"line_end":199,"column_start":11,"column_end":21},"name":"CheckedShl","qualname":"::ops::checked::CheckedShl","value":"CheckedShl: Sized + Shl<u32, Output = Self>","parent":null,"children":[{"krate":0,"index":278}],"decl_id":null,"docs":" Performs a left shift that returns `None` on overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":36695,"byte_end":36706,"line_start":213,"line_end":213,"column_start":8,"column_end":19},"name":"checked_shl","qualname":"::ops::checked::CheckedShl::checked_shl","value":"fn (&self, rhs: u32) -> Option<Self>","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Performs a left shift that returns `None` on overflow.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":282},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":37738,"byte_end":37748,"line_start":244,"line_end":244,"column_start":11,"column_end":21},"name":"CheckedShr","qualname":"::ops::checked::CheckedShr","value":"CheckedShr: Sized + Shr<u32, Output = Self>","parent":null,"children":[{"krate":0,"index":284}],"decl_id":null,"docs":" Performs a right shift that returns `None` on overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":38271,"byte_end":38282,"line_start":258,"line_end":258,"column_start":8,"column_end":19},"name":"checked_shr","qualname":"::ops::checked::CheckedShr::checked_shr","value":"fn (&self, rhs: u32) -> Option<Self>","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Performs a right shift that returns `None` on overflow.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":286},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wrapping","qualname":"::ops::wrapping","value":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/ops/wrapping.rs","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":1770},{"krate":0,"index":1774},{"krate":0,"index":1778},{"krate":0,"index":1782},{"krate":0,"index":1786},{"krate":0,"index":1790},{"krate":0,"index":1794},{"krate":0,"index":1798},{"krate":0,"index":1802},{"krate":0,"index":1806},{"krate":0,"index":1810},{"krate":0,"index":1814},{"krate":0,"index":304},{"krate":0,"index":1818},{"krate":0,"index":1822},{"krate":0,"index":1826},{"krate":0,"index":1830},{"krate":0,"index":1834},{"krate":0,"index":1838},{"krate":0,"index":1842},{"krate":0,"index":1846},{"krate":0,"index":1850},{"krate":0,"index":1854},{"krate":0,"index":1858},{"krate":0,"index":1862},{"krate":0,"index":308},{"krate":0,"index":1866},{"krate":0,"index":1870},{"krate":0,"index":1874},{"krate":0,"index":1878},{"krate":0,"index":1882},{"krate":0,"index":1886},{"krate":0,"index":1890},{"krate":0,"index":1894},{"krate":0,"index":1898},{"krate":0,"index":1902},{"krate":0,"index":1906},{"krate":0,"index":1910},{"krate":0,"index":312},{"krate":0,"index":316},{"krate":0,"index":320}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":300},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":39597,"byte_end":39608,"line_start":24,"line_end":24,"column_start":11,"column_end":22},"name":"WrappingAdd","qualname":"::ops::wrapping::WrappingAdd","value":"WrappingAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":302}],"decl_id":null,"docs":" Performs addition that wraps around on overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":39765,"byte_end":39777,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"::ops::wrapping::WrappingAdd::wrapping_add","value":"fn (&self, v: &Self) -> Self","parent":{"krate":0,"index":300},"children":[],"decl_id":null,"docs":" Performs addition that wraps around on overflow.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":304},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":40489,"byte_end":40500,"line_start":47,"line_end":47,"column_start":11,"column_end":22},"name":"WrappingSub","qualname":"::ops::wrapping::WrappingSub","value":"WrappingSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":306}],"decl_id":null,"docs":" Performs subtraction that wraps around on overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":40660,"byte_end":40672,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"wrapping_sub","qualname":"::ops::wrapping::WrappingSub::wrapping_sub","value":"fn (&self, v: &Self) -> Self","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" Performs subtraction that wraps around on overflow.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":308},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":41387,"byte_end":41398,"line_start":70,"line_end":70,"column_start":11,"column_end":22},"name":"WrappingMul","qualname":"::ops::wrapping::WrappingMul","value":"WrappingMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":310}],"decl_id":null,"docs":" Performs multiplication that wraps around on overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":41561,"byte_end":41573,"line_start":73,"line_end":73,"column_start":8,"column_end":20},"name":"wrapping_mul","qualname":"::ops::wrapping::WrappingMul::wrapping_mul","value":"fn (&self, v: &Self) -> Self","parent":{"krate":0,"index":308},"children":[],"decl_id":null,"docs":" Performs multiplication that wraps around on overflow.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":324},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,105,110,118,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"inv","qualname":"::ops::inv","value":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/ops/inv.rs","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":332},{"krate":0,"index":338},{"krate":0,"index":344},{"krate":0,"index":350}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":326},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,105,110,118,46,114,115],"byte_start":43988,"byte_end":43991,"line_start":2,"line_end":2,"column_start":11,"column_end":14},"name":"Inv","qualname":"::ops::inv::Inv","value":"Inv","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":330}],"decl_id":null,"docs":" Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":328},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,105,110,118,46,114,115],"byte_start":44051,"byte_end":44057,"line_start":4,"line_end":4,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::inv::Inv::Output","value":"type Output;","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" The result after applying the operator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,105,110,118,46,114,115],"byte_start":44336,"byte_end":44339,"line_start":17,"line_end":17,"column_start":8,"column_end":11},"name":"inv","qualname":"::ops::inv::Inv::inv","value":"fn (self) -> Self::Output","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":356},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,109,117,108,95,97,100,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mul_add","qualname":"::ops::mul_add","value":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/ops/mul_add.rs","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":364},{"krate":0,"index":368},{"krate":0,"index":374},{"krate":0,"index":380},{"krate":0,"index":1914},{"krate":0,"index":1920},{"krate":0,"index":1926},{"krate":0,"index":1932},{"krate":0,"index":1938},{"krate":0,"index":1944},{"krate":0,"index":1950},{"krate":0,"index":1956},{"krate":0,"index":1962},{"krate":0,"index":1968},{"krate":0,"index":1974},{"krate":0,"index":1980},{"krate":0,"index":382},{"krate":0,"index":386},{"krate":0,"index":390},{"krate":0,"index":1986},{"krate":0,"index":1990},{"krate":0,"index":1994},{"krate":0,"index":1998},{"krate":0,"index":2002},{"krate":0,"index":2006},{"krate":0,"index":2010},{"krate":0,"index":2014},{"krate":0,"index":2018},{"krate":0,"index":2022},{"krate":0,"index":2026},{"krate":0,"index":2030}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":358},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,109,117,108,95,97,100,100,46,114,115],"byte_start":45342,"byte_end":45348,"line_start":22,"line_end":22,"column_start":11,"column_end":17},"name":"MulAdd","qualname":"::ops::mul_add::MulAdd","value":"MulAdd<A = Self, B = Self>","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":362}],"decl_id":null,"docs":" The fused multiply-add operation.\n Computes (self * a) + b with only one rounding error.\n This produces a more accurate result with better performance\n than a separate multiplication operation followed by an add.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":360},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,109,117,108,95,97,100,100,46,114,115],"byte_start":45446,"byte_end":45452,"line_start":24,"line_end":24,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::mul_add::MulAdd::Output","value":"type Output;","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" The resulting type after applying the fused multiply-add.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,109,117,108,95,97,100,100,46,114,115],"byte_start":45513,"byte_end":45520,"line_start":27,"line_end":27,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::ops::mul_add::MulAdd::mul_add","value":"fn (self, a: A, b: B) -> Self::Output","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" The fused multiply-add operation.\n Computes (self * a) + b with only one rounding error.\n This produces a more accurate result with better performance\n than a separate multiplication operation followed by an add.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":364},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,109,117,108,95,97,100,100,46,114,115],"byte_start":45618,"byte_end":45630,"line_start":31,"line_end":31,"column_start":11,"column_end":23},"name":"MulAddAssign","qualname":"::ops::mul_add::MulAddAssign","value":"MulAddAssign<A = Self, B = Self>","parent":null,"children":[{"krate":0,"index":366}],"decl_id":null,"docs":" The fused multiply-add assignment operation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,109,117,108,95,97,100,100,46,114,115],"byte_start":45711,"byte_end":45725,"line_start":33,"line_end":33,"column_start":8,"column_end":22},"name":"mul_add_assign","qualname":"::ops::mul_add::MulAddAssign::mul_add_assign","value":"fn (&mut self, a: A, b: B) -> ()","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":" The fused multiply-add assignment operation.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":392},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,98,111,117,110,100,115,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bounds","qualname":"::bounds","value":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/bounds.rs","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":406},{"krate":0,"index":418},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":432},{"krate":0,"index":438},{"krate":0,"index":2034},{"krate":0,"index":2040},{"krate":0,"index":2046},{"krate":0,"index":2052},{"krate":0,"index":2058},{"krate":0,"index":2064},{"krate":0,"index":2070},{"krate":0,"index":2076},{"krate":0,"index":2082},{"krate":0,"index":2088},{"krate":0,"index":2094},{"krate":0,"index":2100},{"krate":0,"index":440},{"krate":0,"index":2106},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":2112},{"krate":0,"index":2118},{"krate":0,"index":2124},{"krate":0,"index":2130},{"krate":0,"index":2136},{"krate":0,"index":2142},{"krate":0,"index":2148},{"krate":0,"index":2154},{"krate":0,"index":2160},{"krate":0,"index":2166},{"krate":0,"index":2172},{"krate":0,"index":2178},{"krate":0,"index":2184},{"krate":0,"index":2190},{"krate":0,"index":2196},{"krate":0,"index":2202},{"krate":0,"index":2208},{"krate":0,"index":2214},{"krate":0,"index":2220},{"krate":0,"index":2226},{"krate":0,"index":2232},{"krate":0,"index":2238}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":432},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,98,111,117,110,100,115,46,114,115],"byte_start":48686,"byte_end":48693,"line_start":9,"line_end":9,"column_start":11,"column_end":18},"name":"Bounded","qualname":"::bounds::Bounded","value":"Bounded","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":436}],"decl_id":null,"docs":" Numbers which have upper and lower bounds\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,98,111,117,110,100,115,46,114,115],"byte_start":48829,"byte_end":48838,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"min_value","qualname":"::bounds::Bounded::min_value","value":"fn () -> Self","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":" Numbers which have upper and lower bounds\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,98,111,117,110,100,115,46,114,115],"byte_start":48923,"byte_end":48932,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"max_value","qualname":"::bounds::Bounded::max_value","value":"fn () -> Self","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":" Numbers which have upper and lower bounds\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":452},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"float","qualname":"::float","value":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/float.rs","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":472},{"krate":0,"index":532},{"krate":0,"index":536},{"krate":0,"index":540},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":2356},{"krate":0,"index":2472},{"krate":0,"index":662},{"krate":0,"index":2588},{"krate":0,"index":2622},{"krate":0,"index":2656}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":472},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":51937,"byte_end":51946,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"name":"FloatCore","qualname":"::float::FloatCore","value":"FloatCore: Num + NumCast + Neg<Output = Self> + PartialOrd + Copy","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":530}],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":52343,"byte_end":52351,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"infinity","qualname":"::float::FloatCore::infinity","value":"fn () -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":52714,"byte_end":52726,"line_start":46,"line_end":46,"column_start":8,"column_end":20},"name":"neg_infinity","qualname":"::float::FloatCore::neg_infinity","value":"fn () -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":53036,"byte_end":53039,"line_start":63,"line_end":63,"column_start":8,"column_end":11},"name":"nan","qualname":"::float::FloatCore::nan","value":"fn () -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":53455,"byte_end":53463,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"neg_zero","qualname":"::float::FloatCore::neg_zero","value":"fn () -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":53842,"byte_end":53851,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"min_value","qualname":"::float::FloatCore::min_value","value":"fn () -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":54271,"byte_end":54289,"line_start":116,"line_end":116,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::float::FloatCore::min_positive_value","value":"fn () -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":54651,"byte_end":54658,"line_start":133,"line_end":133,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::float::FloatCore::epsilon","value":"fn () -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":55036,"byte_end":55045,"line_start":150,"line_end":150,"column_start":8,"column_end":17},"name":"max_value","qualname":"::float::FloatCore::max_value","value":"fn () -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":55495,"byte_end":55501,"line_start":170,"line_end":170,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::float::FloatCore::is_nan","value":"fn (self) -> bool","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":56078,"byte_end":56089,"line_start":194,"line_end":194,"column_start":8,"column_end":19},"name":"is_infinite","qualname":"::float::FloatCore::is_infinite","value":"fn (self) -> bool","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":56690,"byte_end":56699,"line_start":217,"line_end":217,"column_start":8,"column_end":17},"name":"is_finite","qualname":"::float::FloatCore::is_finite","value":"fn (self) -> bool","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":57297,"byte_end":57306,"line_start":240,"line_end":240,"column_start":8,"column_end":17},"name":"is_normal","qualname":"::float::FloatCore::is_normal","value":"fn (self) -> bool","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":58145,"byte_end":58153,"line_start":266,"line_end":266,"column_start":8,"column_end":16},"name":"classify","qualname":"::float::FloatCore::classify","value":"fn (self) -> FpCategory","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":58786,"byte_end":58791,"line_start":291,"line_end":291,"column_start":8,"column_end":13},"name":"floor","qualname":"::float::FloatCore::floor","value":"fn (self) -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":59637,"byte_end":59641,"line_start":325,"line_end":325,"column_start":8,"column_end":12},"name":"ceil","qualname":"::float::FloatCore::ceil","value":"fn (self) -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":60473,"byte_end":60478,"line_start":358,"line_end":358,"column_start":8,"column_end":13},"name":"round","qualname":"::float::FloatCore::round","value":"fn (self) -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":61569,"byte_end":61574,"line_start":402,"line_end":402,"column_start":8,"column_end":13},"name":"trunc","qualname":"::float::FloatCore::trunc","value":"fn (self) -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":62295,"byte_end":62300,"line_start":434,"line_end":434,"column_start":8,"column_end":13},"name":"fract","qualname":"::float::FloatCore::fract","value":"fn (self) -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":63005,"byte_end":63008,"line_start":463,"line_end":463,"column_start":8,"column_end":11},"name":"abs","qualname":"::float::FloatCore::abs","value":"fn (self) -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":63932,"byte_end":63938,"line_start":497,"line_end":497,"column_start":8,"column_end":14},"name":"signum","qualname":"::float::FloatCore::signum","value":"fn (self) -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":64800,"byte_end":64816,"line_start":530,"line_end":530,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::float::FloatCore::is_sign_positive","value":"fn (self) -> bool","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":65546,"byte_end":65562,"line_start":557,"line_end":557,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::float::FloatCore::is_sign_negative","value":"fn (self) -> bool","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":66195,"byte_end":66198,"line_start":582,"line_end":582,"column_start":8,"column_end":11},"name":"min","qualname":"::float::FloatCore::min","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":66955,"byte_end":66958,"line_start":612,"line_end":612,"column_start":8,"column_end":11},"name":"max","qualname":"::float::FloatCore::max","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":67673,"byte_end":67678,"line_start":641,"line_end":641,"column_start":8,"column_end":13},"name":"recip","qualname":"::float::FloatCore::recip","value":"fn (self) -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":68272,"byte_end":68276,"line_start":665,"line_end":665,"column_start":8,"column_end":12},"name":"powi","qualname":"::float::FloatCore::powi","value":"fn (mut self, mut exp: i32) -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":69193,"byte_end":69203,"line_start":693,"line_end":693,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::float::FloatCore::to_degrees","value":"fn (self) -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":69699,"byte_end":69709,"line_start":712,"line_end":712,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::float::FloatCore::to_radians","value":"fn (self) -> Self","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":70468,"byte_end":70482,"line_start":735,"line_end":735,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"::float::FloatCore::integer_decode","value":"fn (self) -> (u64, i16, i8)","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":540},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75220,"byte_end":75225,"line_start":890,"line_end":890,"column_start":11,"column_end":16},"name":"Float","qualname":"::float::Float","value":"Float: Num + Copy + NumCast + PartialOrd + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":654}],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75492,"byte_end":75495,"line_start":906,"line_end":906,"column_start":8,"column_end":11},"name":"nan","qualname":"::float::Float::nan","value":"fn () -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75817,"byte_end":75825,"line_start":919,"line_end":919,"column_start":8,"column_end":16},"name":"infinity","qualname":"::float::Float::infinity","value":"fn () -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":76176,"byte_end":76188,"line_start":932,"line_end":932,"column_start":8,"column_end":20},"name":"neg_infinity","qualname":"::float::Float::neg_infinity","value":"fn () -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":76558,"byte_end":76566,"line_start":946,"line_end":946,"column_start":8,"column_end":16},"name":"neg_zero","qualname":"::float::Float::neg_zero","value":"fn () -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":76833,"byte_end":76842,"line_start":958,"line_end":958,"column_start":8,"column_end":17},"name":"min_value","qualname":"::float::Float::min_value","value":"fn () -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":77141,"byte_end":77159,"line_start":970,"line_end":970,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::float::Float::min_positive_value","value":"fn () -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":77536,"byte_end":77543,"line_start":987,"line_end":987,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::float::Float::epsilon","value":"fn () -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":77884,"byte_end":77893,"line_start":1000,"line_end":1000,"column_start":8,"column_end":17},"name":"max_value","qualname":"::float::Float::max_value","value":"fn () -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":78191,"byte_end":78197,"line_start":1014,"line_end":1014,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::float::Float::is_nan","value":"fn (self) -> bool","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":78735,"byte_end":78746,"line_start":1034,"line_end":1034,"column_start":8,"column_end":19},"name":"is_infinite","qualname":"::float::Float::is_infinite","value":"fn (self) -> bool","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":79238,"byte_end":79247,"line_start":1053,"line_end":1053,"column_start":8,"column_end":17},"name":"is_finite","qualname":"::float::Float::is_finite","value":"fn (self) -> bool","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":79997,"byte_end":80006,"line_start":1077,"line_end":1077,"column_start":8,"column_end":17},"name":"is_normal","qualname":"::float::Float::is_normal","value":"fn (self) -> bool","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":80520,"byte_end":80528,"line_start":1094,"line_end":1094,"column_start":8,"column_end":16},"name":"classify","qualname":"::float::Float::classify","value":"fn (self) -> FpCategory","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":80820,"byte_end":80825,"line_start":1107,"line_end":1107,"column_start":8,"column_end":13},"name":"floor","qualname":"::float::Float::floor","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":81113,"byte_end":81117,"line_start":1120,"line_end":1120,"column_start":8,"column_end":12},"name":"ceil","qualname":"::float::Float::ceil","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":81431,"byte_end":81436,"line_start":1134,"line_end":1134,"column_start":8,"column_end":13},"name":"round","qualname":"::float::Float::round","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":81700,"byte_end":81705,"line_start":1147,"line_end":1147,"column_start":8,"column_end":13},"name":"trunc","qualname":"::float::Float::trunc","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":82101,"byte_end":82106,"line_start":1162,"line_end":1162,"column_start":8,"column_end":13},"name":"fract","qualname":"::float::Float::fract","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":82636,"byte_end":82639,"line_start":1182,"line_end":1182,"column_start":8,"column_end":11},"name":"abs","qualname":"::float::Float::abs","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":83206,"byte_end":83212,"line_start":1201,"line_end":1201,"column_start":8,"column_end":14},"name":"signum","qualname":"::float::Float::signum","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":83685,"byte_end":83701,"line_start":1219,"line_end":1219,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::float::Float::is_sign_positive","value":"fn (self) -> bool","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":84170,"byte_end":84186,"line_start":1237,"line_end":1237,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::float::Float::is_sign_negative","value":"fn (self) -> bool","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":84708,"byte_end":84715,"line_start":1255,"line_end":1255,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::float::Float::mul_add","value":"fn (self, a: Self, b: Self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":85013,"byte_end":85018,"line_start":1266,"line_end":1266,"column_start":8,"column_end":13},"name":"recip","qualname":"::float::Float::recip","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":85355,"byte_end":85359,"line_start":1280,"line_end":1280,"column_start":8,"column_end":12},"name":"powi","qualname":"::float::Float::powi","value":"fn (self, n: i32) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":85638,"byte_end":85642,"line_start":1292,"line_end":1292,"column_start":8,"column_end":12},"name":"powf","qualname":"::float::Float::powf","value":"fn (self, n: Self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":86065,"byte_end":86069,"line_start":1309,"line_end":1309,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::float::Float::sqrt","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":86419,"byte_end":86422,"line_start":1325,"line_end":1325,"column_start":8,"column_end":11},"name":"exp","qualname":"::float::Float::exp","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":86700,"byte_end":86704,"line_start":1339,"line_end":1339,"column_start":8,"column_end":12},"name":"exp2","qualname":"::float::Float::exp2","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":87051,"byte_end":87053,"line_start":1355,"line_end":1355,"column_start":8,"column_end":10},"name":"ln","qualname":"::float::Float::ln","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":87563,"byte_end":87566,"line_start":1374,"line_end":1374,"column_start":8,"column_end":11},"name":"log","qualname":"::float::Float::log","value":"fn (self, base: Self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":87888,"byte_end":87892,"line_start":1388,"line_end":1388,"column_start":8,"column_end":12},"name":"log2","qualname":"::float::Float::log2","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":88207,"byte_end":88212,"line_start":1402,"line_end":1402,"column_start":8,"column_end":13},"name":"log10","qualname":"::float::Float::log10","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":88511,"byte_end":88521,"line_start":1416,"line_end":1416,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::float::Float::to_degrees","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":88952,"byte_end":88962,"line_start":1434,"line_end":1434,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::float::Float::to_radians","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":89316,"byte_end":89319,"line_start":1450,"line_end":1450,"column_start":8,"column_end":11},"name":"max","qualname":"::float::Float::max","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":89558,"byte_end":89561,"line_start":1462,"line_end":1462,"column_start":8,"column_end":11},"name":"min","qualname":"::float::Float::min","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":90059,"byte_end":90066,"line_start":1481,"line_end":1481,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::float::Float::abs_sub","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":90374,"byte_end":90378,"line_start":1495,"line_end":1495,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::float::Float::cbrt","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":90796,"byte_end":90801,"line_start":1511,"line_end":1511,"column_start":8,"column_end":13},"name":"hypot","qualname":"::float::Float::hypot","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":91129,"byte_end":91132,"line_start":1525,"line_end":1525,"column_start":8,"column_end":11},"name":"sin","qualname":"::float::Float::sin","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":91449,"byte_end":91452,"line_start":1539,"line_end":1539,"column_start":8,"column_end":11},"name":"cos","qualname":"::float::Float::cos","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":91762,"byte_end":91765,"line_start":1552,"line_end":1552,"column_start":8,"column_end":11},"name":"tan","qualname":"::float::Float::tan","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":92245,"byte_end":92249,"line_start":1569,"line_end":1569,"column_start":8,"column_end":12},"name":"asin","qualname":"::float::Float::asin","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":92725,"byte_end":92729,"line_start":1586,"line_end":1586,"column_start":8,"column_end":12},"name":"acos","qualname":"::float::Float::acos","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":93093,"byte_end":93097,"line_start":1601,"line_end":1601,"column_start":8,"column_end":12},"name":"atan","qualname":"::float::Float::atan","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":93978,"byte_end":93983,"line_start":1630,"line_end":1630,"column_start":8,"column_end":13},"name":"atan2","qualname":"::float::Float::atan2","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":94497,"byte_end":94504,"line_start":1648,"line_end":1648,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::float::Float::sin_cos","value":"fn (self) -> (Self, Self)","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":94872,"byte_end":94878,"line_start":1663,"line_end":1663,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::float::Float::exp_m1","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":95305,"byte_end":95310,"line_start":1679,"line_end":1679,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::float::Float::ln_1p","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":95730,"byte_end":95734,"line_start":1697,"line_end":1697,"column_start":8,"column_end":12},"name":"sinh","qualname":"::float::Float::sinh","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":96170,"byte_end":96174,"line_start":1715,"line_end":1715,"column_start":8,"column_end":12},"name":"cosh","qualname":"::float::Float::cosh","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":96630,"byte_end":96634,"line_start":1733,"line_end":1733,"column_start":8,"column_end":12},"name":"tanh","qualname":"::float::Float::tanh","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":96929,"byte_end":96934,"line_start":1747,"line_end":1747,"column_start":8,"column_end":13},"name":"asinh","qualname":"::float::Float::asinh","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":97231,"byte_end":97236,"line_start":1761,"line_end":1761,"column_start":8,"column_end":13},"name":"acosh","qualname":"::float::Float::acosh","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":97567,"byte_end":97572,"line_start":1776,"line_end":1776,"column_start":8,"column_end":13},"name":"atanh","qualname":"::float::Float::atanh","value":"fn (self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":98265,"byte_end":98279,"line_start":1798,"line_end":1798,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"::float::Float::integer_decode","value":"fn (self) -> (u64, i16, i8)","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75186,"byte_end":75209,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":664},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"real","qualname":"::real","value":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/real.rs","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":676},{"krate":0,"index":772}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1752,"byte_end":1775,"line_start":55,"line_end":55,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":676},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":105894,"byte_end":105898,"line_start":15,"line_end":15,"column_start":11,"column_end":15},"name":"Real","qualname":"::real::Real","value":"Real: Num + Copy + NumCast + PartialOrd + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":770}],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":106236,"byte_end":106245,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"min_value","qualname":"::real::Real::min_value","value":"fn () -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":106548,"byte_end":106566,"line_start":44,"line_end":44,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::real::Real::min_positive_value","value":"fn () -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":106947,"byte_end":106954,"line_start":61,"line_end":61,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::real::Real::epsilon","value":"fn () -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":107216,"byte_end":107225,"line_start":72,"line_end":72,"column_start":8,"column_end":17},"name":"max_value","qualname":"::real::Real::max_value","value":"fn () -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":107512,"byte_end":107517,"line_start":85,"line_end":85,"column_start":8,"column_end":13},"name":"floor","qualname":"::real::Real::floor","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":107810,"byte_end":107814,"line_start":98,"line_end":98,"column_start":8,"column_end":12},"name":"ceil","qualname":"::real::Real::ceil","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":108133,"byte_end":108138,"line_start":112,"line_end":112,"column_start":8,"column_end":13},"name":"round","qualname":"::real::Real::round","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":108407,"byte_end":108412,"line_start":125,"line_end":125,"column_start":8,"column_end":13},"name":"trunc","qualname":"::real::Real::trunc","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":108813,"byte_end":108818,"line_start":140,"line_end":140,"column_start":8,"column_end":13},"name":"fract","qualname":"::real::Real::fract","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":109373,"byte_end":109376,"line_start":160,"line_end":160,"column_start":8,"column_end":11},"name":"abs","qualname":"::real::Real::abs","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":109948,"byte_end":109954,"line_start":179,"line_end":179,"column_start":8,"column_end":14},"name":"signum","qualname":"::real::Real::signum","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":110435,"byte_end":110451,"line_start":197,"line_end":197,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::real::Real::is_sign_positive","value":"fn (self) -> bool","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":110928,"byte_end":110944,"line_start":215,"line_end":215,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::real::Real::is_sign_negative","value":"fn (self) -> bool","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":111471,"byte_end":111478,"line_start":233,"line_end":233,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::real::Real::mul_add","value":"fn (self, a: Self, b: Self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":111782,"byte_end":111787,"line_start":245,"line_end":245,"column_start":8,"column_end":13},"name":"recip","qualname":"::real::Real::recip","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":112129,"byte_end":112133,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"powi","qualname":"::real::Real::powi","value":"fn (self, n: i32) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":112414,"byte_end":112418,"line_start":271,"line_end":271,"column_start":8,"column_end":12},"name":"powf","qualname":"::real::Real::powf","value":"fn (self, n: Self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":113010,"byte_end":113014,"line_start":292,"line_end":292,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::real::Real::sqrt","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":113369,"byte_end":113372,"line_start":308,"line_end":308,"column_start":8,"column_end":11},"name":"exp","qualname":"::real::Real::exp","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":113655,"byte_end":113659,"line_start":322,"line_end":322,"column_start":8,"column_end":12},"name":"exp2","qualname":"::real::Real::exp2","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":114148,"byte_end":114150,"line_start":342,"line_end":342,"column_start":8,"column_end":10},"name":"ln","qualname":"::real::Real::ln","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":114802,"byte_end":114805,"line_start":365,"line_end":365,"column_start":8,"column_end":11},"name":"log","qualname":"::real::Real::log","value":"fn (self, base: Self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":115269,"byte_end":115273,"line_start":383,"line_end":383,"column_start":8,"column_end":12},"name":"log2","qualname":"::real::Real::log2","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":115738,"byte_end":115743,"line_start":402,"line_end":402,"column_start":8,"column_end":13},"name":"log10","qualname":"::real::Real::log10","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":116028,"byte_end":116038,"line_start":415,"line_end":415,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::real::Real::to_degrees","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":116327,"byte_end":116337,"line_start":428,"line_end":428,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::real::Real::to_radians","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":116568,"byte_end":116571,"line_start":440,"line_end":440,"column_start":8,"column_end":11},"name":"max","qualname":"::real::Real::max","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":116815,"byte_end":116818,"line_start":452,"line_end":452,"column_start":8,"column_end":11},"name":"min","qualname":"::real::Real::min","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":117321,"byte_end":117328,"line_start":471,"line_end":471,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::real::Real::abs_sub","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":117641,"byte_end":117645,"line_start":485,"line_end":485,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::real::Real::cbrt","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":118068,"byte_end":118073,"line_start":501,"line_end":501,"column_start":8,"column_end":13},"name":"hypot","qualname":"::real::Real::hypot","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":118406,"byte_end":118409,"line_start":515,"line_end":515,"column_start":8,"column_end":11},"name":"sin","qualname":"::real::Real::sin","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":118731,"byte_end":118734,"line_start":529,"line_end":529,"column_start":8,"column_end":11},"name":"cos","qualname":"::real::Real::cos","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":119049,"byte_end":119052,"line_start":542,"line_end":542,"column_start":8,"column_end":11},"name":"tan","qualname":"::real::Real::tan","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":119709,"byte_end":119713,"line_start":564,"line_end":564,"column_start":8,"column_end":12},"name":"asin","qualname":"::real::Real::asin","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":120366,"byte_end":120370,"line_start":586,"line_end":586,"column_start":8,"column_end":12},"name":"acos","qualname":"::real::Real::acos","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":120739,"byte_end":120743,"line_start":601,"line_end":601,"column_start":8,"column_end":12},"name":"atan","qualname":"::real::Real::atan","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":121629,"byte_end":121634,"line_start":630,"line_end":630,"column_start":8,"column_end":13},"name":"atan2","qualname":"::real::Real::atan2","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":122153,"byte_end":122160,"line_start":648,"line_end":648,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::real::Real::sin_cos","value":"fn (self) -> (Self, Self)","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":122533,"byte_end":122539,"line_start":663,"line_end":663,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::real::Real::exp_m1","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":123117,"byte_end":123122,"line_start":684,"line_end":684,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::real::Real::ln_1p","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":123547,"byte_end":123551,"line_start":702,"line_end":702,"column_start":8,"column_end":12},"name":"sinh","qualname":"::real::Real::sinh","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":123992,"byte_end":123996,"line_start":720,"line_end":720,"column_start":8,"column_end":12},"name":"cosh","qualname":"::real::Real::cosh","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":124457,"byte_end":124461,"line_start":738,"line_end":738,"column_start":8,"column_end":12},"name":"tanh","qualname":"::real::Real::tanh","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":124761,"byte_end":124766,"line_start":752,"line_end":752,"column_start":8,"column_end":13},"name":"asinh","qualname":"::real::Real::asinh","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":125068,"byte_end":125073,"line_start":766,"line_end":766,"column_start":8,"column_end":13},"name":"acosh","qualname":"::real::Real::acosh","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":125409,"byte_end":125414,"line_start":781,"line_end":781,"column_start":8,"column_end":13},"name":"atanh","qualname":"::real::Real::atanh","value":"fn (self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":774},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cast","qualname":"::cast","value":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/cast.rs","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":788},{"krate":0,"index":800},{"krate":0,"index":806},{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":2784},{"krate":0,"index":2814},{"krate":0,"index":2844},{"krate":0,"index":2874},{"krate":0,"index":2904},{"krate":0,"index":2934},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":2964},{"krate":0,"index":2994},{"krate":0,"index":3024},{"krate":0,"index":3054},{"krate":0,"index":3084},{"krate":0,"index":3114},{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":3144},{"krate":0,"index":3246},{"krate":0,"index":868},{"krate":0,"index":898},{"krate":0,"index":3348},{"krate":0,"index":3374},{"krate":0,"index":3400},{"krate":0,"index":3426},{"krate":0,"index":3452},{"krate":0,"index":3478},{"krate":0,"index":3504},{"krate":0,"index":3530},{"krate":0,"index":3556},{"krate":0,"index":3582},{"krate":0,"index":3608},{"krate":0,"index":3634},{"krate":0,"index":3660},{"krate":0,"index":3686},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":914},{"krate":0,"index":3768},{"krate":0,"index":3772},{"krate":0,"index":3776},{"krate":0,"index":3780},{"krate":0,"index":3784},{"krate":0,"index":3788},{"krate":0,"index":3792},{"krate":0,"index":3796},{"krate":0,"index":3800},{"krate":0,"index":3804},{"krate":0,"index":3808},{"krate":0,"index":3812},{"krate":0,"index":3816},{"krate":0,"index":3820},{"krate":0,"index":916},{"krate":0,"index":920},{"krate":0,"index":924},{"krate":0,"index":3824},{"krate":0,"index":3828},{"krate":0,"index":3832},{"krate":0,"index":3836},{"krate":0,"index":3840},{"krate":0,"index":3844},{"krate":0,"index":3848},{"krate":0,"index":3852},{"krate":0,"index":3856},{"krate":0,"index":3860},{"krate":0,"index":3864},{"krate":0,"index":3868},{"krate":0,"index":3872},{"krate":0,"index":3876},{"krate":0,"index":3880},{"krate":0,"index":3884},{"krate":0,"index":3888},{"krate":0,"index":3892},{"krate":0,"index":3896},{"krate":0,"index":3900},{"krate":0,"index":3904},{"krate":0,"index":3908},{"krate":0,"index":3912},{"krate":0,"index":3916},{"krate":0,"index":3920},{"krate":0,"index":3924},{"krate":0,"index":3928},{"krate":0,"index":3932},{"krate":0,"index":3936},{"krate":0,"index":3940},{"krate":0,"index":3944},{"krate":0,"index":3948},{"krate":0,"index":3952},{"krate":0,"index":3956},{"krate":0,"index":3960},{"krate":0,"index":3964},{"krate":0,"index":3968},{"krate":0,"index":3972},{"krate":0,"index":3976},{"krate":0,"index":3980},{"krate":0,"index":3984},{"krate":0,"index":3988},{"krate":0,"index":3992},{"krate":0,"index":3996},{"krate":0,"index":4000},{"krate":0,"index":4004},{"krate":0,"index":4008},{"krate":0,"index":4012},{"krate":0,"index":4016},{"krate":0,"index":4020},{"krate":0,"index":4024},{"krate":0,"index":4028},{"krate":0,"index":4032},{"krate":0,"index":4036},{"krate":0,"index":4040},{"krate":0,"index":4044},{"krate":0,"index":4048},{"krate":0,"index":4052},{"krate":0,"index":4056},{"krate":0,"index":4060},{"krate":0,"index":4064},{"krate":0,"index":4068},{"krate":0,"index":4072},{"krate":0,"index":4076},{"krate":0,"index":4080},{"krate":0,"index":4084},{"krate":0,"index":4088},{"krate":0,"index":4092},{"krate":0,"index":4096},{"krate":0,"index":4100},{"krate":0,"index":4104},{"krate":0,"index":4108},{"krate":0,"index":4112},{"krate":0,"index":4116},{"krate":0,"index":4120},{"krate":0,"index":4124},{"krate":0,"index":4128},{"krate":0,"index":4132},{"krate":0,"index":4136},{"krate":0,"index":4140},{"krate":0,"index":4144},{"krate":0,"index":4148},{"krate":0,"index":4152},{"krate":0,"index":4156},{"krate":0,"index":4160},{"krate":0,"index":4164},{"krate":0,"index":4168},{"krate":0,"index":4172},{"krate":0,"index":4176},{"krate":0,"index":4180},{"krate":0,"index":4184},{"krate":0,"index":4188},{"krate":0,"index":4192},{"krate":0,"index":4196},{"krate":0,"index":4200},{"krate":0,"index":4204},{"krate":0,"index":4208},{"krate":0,"index":4212},{"krate":0,"index":4216},{"krate":0,"index":4220},{"krate":0,"index":4224},{"krate":0,"index":4228},{"krate":0,"index":4232},{"krate":0,"index":4236},{"krate":0,"index":4240},{"krate":0,"index":4244},{"krate":0,"index":4248},{"krate":0,"index":4252},{"krate":0,"index":4256},{"krate":0,"index":4260},{"krate":0,"index":4264},{"krate":0,"index":4268},{"krate":0,"index":4272},{"krate":0,"index":4276},{"krate":0,"index":4280},{"krate":0,"index":4284},{"krate":0,"index":4288},{"krate":0,"index":4292},{"krate":0,"index":4296},{"krate":0,"index":4300},{"krate":0,"index":4304},{"krate":0,"index":4308},{"krate":0,"index":4312},{"krate":0,"index":4316},{"krate":0,"index":4320},{"krate":0,"index":4324},{"krate":0,"index":4328},{"krate":0,"index":4332},{"krate":0,"index":4336},{"krate":0,"index":4340},{"krate":0,"index":4344},{"krate":0,"index":4348},{"krate":0,"index":4352},{"krate":0,"index":4356},{"krate":0,"index":4360},{"krate":0,"index":4364},{"krate":0,"index":4368},{"krate":0,"index":4372},{"krate":0,"index":4376},{"krate":0,"index":4380},{"krate":0,"index":4384},{"krate":0,"index":4388},{"krate":0,"index":4392},{"krate":0,"index":4396},{"krate":0,"index":4400},{"krate":0,"index":4404},{"krate":0,"index":4408},{"krate":0,"index":4412},{"krate":0,"index":4416},{"krate":0,"index":4420},{"krate":0,"index":4424},{"krate":0,"index":4428},{"krate":0,"index":4432},{"krate":0,"index":4436},{"krate":0,"index":4440},{"krate":0,"index":4444},{"krate":0,"index":4448},{"krate":0,"index":4452},{"krate":0,"index":4456},{"krate":0,"index":4460},{"krate":0,"index":4464},{"krate":0,"index":4468},{"krate":0,"index":4472},{"krate":0,"index":4476},{"krate":0,"index":4480},{"krate":0,"index":4484},{"krate":0,"index":4488},{"krate":0,"index":4492},{"krate":0,"index":4496},{"krate":0,"index":4500},{"krate":0,"index":4504},{"krate":0,"index":4508},{"krate":0,"index":4512},{"krate":0,"index":4516},{"krate":0,"index":4520},{"krate":0,"index":4524},{"krate":0,"index":4528},{"krate":0,"index":4532},{"krate":0,"index":4536},{"krate":0,"index":4540},{"krate":0,"index":4544},{"krate":0,"index":4548},{"krate":0,"index":4552},{"krate":0,"index":4556},{"krate":0,"index":4560},{"krate":0,"index":4564},{"krate":0,"index":4568},{"krate":0,"index":4572},{"krate":0,"index":4576},{"krate":0,"index":4580},{"krate":0,"index":4584},{"krate":0,"index":4588},{"krate":0,"index":4592},{"krate":0,"index":4596},{"krate":0,"index":4600},{"krate":0,"index":4604},{"krate":0,"index":4608},{"krate":0,"index":4612},{"krate":0,"index":4616},{"krate":0,"index":4620},{"krate":0,"index":4624},{"krate":0,"index":4628},{"krate":0,"index":4632},{"krate":0,"index":4636},{"krate":0,"index":4640},{"krate":0,"index":4644},{"krate":0,"index":4648},{"krate":0,"index":4652},{"krate":0,"index":4656},{"krate":0,"index":4660},{"krate":0,"index":4664},{"krate":0,"index":4668},{"krate":0,"index":4672},{"krate":0,"index":4676},{"krate":0,"index":4680},{"krate":0,"index":4684},{"krate":0,"index":4688},{"krate":0,"index":4692},{"krate":0,"index":4696},{"krate":0,"index":4700},{"krate":0,"index":4704},{"krate":0,"index":4708}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":818},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":127611,"byte_end":127622,"line_start":12,"line_end":12,"column_start":11,"column_end":22},"name":"ToPrimitive","qualname":"::cast::ToPrimitive","value":"ToPrimitive","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":846}],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":127698,"byte_end":127706,"line_start":15,"line_end":15,"column_start":8,"column_end":16},"name":"to_isize","qualname":"::cast::ToPrimitive::to_isize","value":"fn (&self) -> Option<isize>","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":127859,"byte_end":127864,"line_start":21,"line_end":21,"column_start":8,"column_end":13},"name":"to_i8","qualname":"::cast::ToPrimitive::to_i8","value":"fn (&self) -> Option<i8>","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":128012,"byte_end":128018,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"to_i16","qualname":"::cast::ToPrimitive::to_i16","value":"fn (&self) -> Option<i16>","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":128168,"byte_end":128174,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"to_i32","qualname":"::cast::ToPrimitive::to_i32","value":"fn (&self) -> Option<i32>","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":128310,"byte_end":128316,"line_start":38,"line_end":38,"column_start":8,"column_end":14},"name":"to_i64","qualname":"::cast::ToPrimitive::to_i64","value":"fn (&self) -> Option<i64>","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":128703,"byte_end":128710,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"to_i128","qualname":"::cast::ToPrimitive::to_i128","value":"fn (&self) -> Option<i128>","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":128853,"byte_end":128861,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"to_usize","qualname":"::cast::ToPrimitive::to_usize","value":"fn (&self) -> Option<usize>","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":129014,"byte_end":129019,"line_start":60,"line_end":60,"column_start":8,"column_end":13},"name":"to_u8","qualname":"::cast::ToPrimitive::to_u8","value":"fn (&self) -> Option<u8>","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":129167,"byte_end":129173,"line_start":66,"line_end":66,"column_start":8,"column_end":14},"name":"to_u16","qualname":"::cast::ToPrimitive::to_u16","value":"fn (&self) -> Option<u16>","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":129323,"byte_end":129329,"line_start":72,"line_end":72,"column_start":8,"column_end":14},"name":"to_u32","qualname":"::cast::ToPrimitive::to_u32","value":"fn (&self) -> Option<u32>","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":129479,"byte_end":129485,"line_start":78,"line_end":78,"column_start":8,"column_end":14},"name":"to_u64","qualname":"::cast::ToPrimitive::to_u64","value":"fn (&self) -> Option<u64>","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":129872,"byte_end":129879,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"to_u128","qualname":"::cast::ToPrimitive::to_u128","value":"fn (&self) -> Option<u128>","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":130021,"byte_end":130027,"line_start":94,"line_end":94,"column_start":8,"column_end":14},"name":"to_f32","qualname":"::cast::ToPrimitive::to_f32","value":"fn (&self) -> Option<f32>","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":130177,"byte_end":130183,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"to_f64","qualname":"::cast::ToPrimitive::to_f64","value":"fn (&self) -> Option<f64>","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":868},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":138364,"byte_end":138377,"line_start":353,"line_end":353,"column_start":11,"column_end":24},"name":"FromPrimitive","qualname":"::cast::FromPrimitive","value":"FromPrimitive: Sized","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":896}],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":138559,"byte_end":138569,"line_start":357,"line_end":357,"column_start":8,"column_end":18},"name":"from_isize","qualname":"::cast::FromPrimitive::from_isize","value":"fn (n: isize) -> Option<Self>","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":138815,"byte_end":138822,"line_start":364,"line_end":364,"column_start":8,"column_end":15},"name":"from_i8","qualname":"::cast::FromPrimitive::from_i8","value":"fn (n: i8) -> Option<Self>","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":139066,"byte_end":139074,"line_start":371,"line_end":371,"column_start":8,"column_end":16},"name":"from_i16","qualname":"::cast::FromPrimitive::from_i16","value":"fn (n: i16) -> Option<Self>","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":139319,"byte_end":139327,"line_start":378,"line_end":378,"column_start":8,"column_end":16},"name":"from_i32","qualname":"::cast::FromPrimitive::from_i32","value":"fn (n: i32) -> Option<Self>","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":139558,"byte_end":139566,"line_start":384,"line_end":384,"column_start":8,"column_end":16},"name":"from_i64","qualname":"::cast::FromPrimitive::from_i64","value":"fn (n: i64) -> Option<Self>","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":140055,"byte_end":140064,"line_start":395,"line_end":395,"column_start":8,"column_end":17},"name":"from_i128","qualname":"::cast::FromPrimitive::from_i128","value":"fn (n: i128) -> Option<Self>","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":140322,"byte_end":140332,"line_start":402,"line_end":402,"column_start":8,"column_end":18},"name":"from_usize","qualname":"::cast::FromPrimitive::from_usize","value":"fn (n: usize) -> Option<Self>","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":140578,"byte_end":140585,"line_start":409,"line_end":409,"column_start":8,"column_end":15},"name":"from_u8","qualname":"::cast::FromPrimitive::from_u8","value":"fn (n: u8) -> Option<Self>","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":140829,"byte_end":140837,"line_start":416,"line_end":416,"column_start":8,"column_end":16},"name":"from_u16","qualname":"::cast::FromPrimitive::from_u16","value":"fn (n: u16) -> Option<Self>","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":141082,"byte_end":141090,"line_start":423,"line_end":423,"column_start":8,"column_end":16},"name":"from_u32","qualname":"::cast::FromPrimitive::from_u32","value":"fn (n: u32) -> Option<Self>","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":141321,"byte_end":141329,"line_start":429,"line_end":429,"column_start":8,"column_end":16},"name":"from_u64","qualname":"::cast::FromPrimitive::from_u64","value":"fn (n: u64) -> Option<Self>","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":141818,"byte_end":141827,"line_start":440,"line_end":440,"column_start":8,"column_end":17},"name":"from_u128","qualname":"::cast::FromPrimitive::from_u128","value":"fn (n: u128) -> Option<Self>","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":142083,"byte_end":142091,"line_start":447,"line_end":447,"column_start":8,"column_end":16},"name":"from_f32","qualname":"::cast::FromPrimitive::from_f32","value":"fn (n: f32) -> Option<Self>","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":142335,"byte_end":142343,"line_start":454,"line_end":454,"column_start":8,"column_end":16},"name":"from_f64","qualname":"::cast::FromPrimitive::from_f64","value":"fn (n: f64) -> Option<Self>","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":908},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":145792,"byte_end":145796,"line_start":579,"line_end":579,"column_start":8,"column_end":12},"name":"cast","qualname":"::cast::cast","value":"fn <T, U> (n: T) -> Option<U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one machine scalar to another.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":145775,"byte_end":145784,"line_start":578,"line_end":578,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":910},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":145930,"byte_end":145937,"line_start":584,"line_end":584,"column_start":11,"column_end":18},"name":"NumCast","qualname":"::cast::NumCast","value":"NumCast: Sized + ToPrimitive","parent":null,"children":[{"krate":0,"index":912}],"decl_id":null,"docs":" An interface for casting between machine scalars.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":146088,"byte_end":146092,"line_start":587,"line_end":587,"column_start":8,"column_end":12},"name":"from","qualname":"::cast::NumCast::from","value":"fn <T> (n: T) -> Option<Self>","parent":{"krate":0,"index":910},"children":[],"decl_id":null,"docs":" An interface for casting between machine scalars.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":920},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":148255,"byte_end":148266,"line_start":662,"line_end":662,"column_start":11,"column_end":22},"name":"AsPrimitive","qualname":"::cast::AsPrimitive","value":"AsPrimitive<T>: 'static + Copy","parent":null,"children":[{"krate":0,"index":922}],"decl_id":null,"docs":" A generic interface for casting between machine scalars with the\n `as` operator, which admits narrowing and precision loss.\n Implementers of this trait AsPrimitive should behave like a primitive\n numeric type (e.g. a newtype around another primitive), and the\n intended conversion must never fail.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":148384,"byte_end":148387,"line_start":667,"line_end":667,"column_start":8,"column_end":11},"name":"as_","qualname":"::cast::AsPrimitive::as_","value":"fn (self) -> T","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":" A generic interface for casting between machine scalars with the\n `as` operator, which admits narrowing and precision loss.\n Implementers of this trait AsPrimitive should behave like a primitive\n numeric type (e.g. a newtype around another primitive), and the\n intended conversion must never fail.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":926},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"int","qualname":"::int","value":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/int.rs","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":942},{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":988},{"krate":0,"index":4712},{"krate":0,"index":4746},{"krate":0,"index":4780},{"krate":0,"index":4814},{"krate":0,"index":4848},{"krate":0,"index":4882},{"krate":0,"index":4916},{"krate":0,"index":4950},{"krate":0,"index":4984},{"krate":0,"index":5018},{"krate":0,"index":5052},{"krate":0,"index":5086}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":954},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":149931,"byte_end":149938,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"PrimInt","qualname":"::int::PrimInt","value":"PrimInt: Sized + Copy + Num + NumCast + Bounded + PartialOrd + Ord + Eq + Not<Output =\nSelf> + BitAnd<Output = Self> + BitOr<Output = Self> + BitXor<Output = Self> +\nShl<usize, Output = Self> + Shr<usize, Output = Self> + CheckedAdd<Output =\nSelf> + CheckedSub<Output = Self> + CheckedMul<Output = Self> +\nCheckedDiv<Output = Self> + Saturating","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":968},{"krate":0,"index":970},{"krate":0,"index":972},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":986}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":150582,"byte_end":150592,"line_start":37,"line_end":37,"column_start":8,"column_end":18},"name":"count_ones","qualname":"::int::PrimInt::count_ones","value":"fn (self) -> u32","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":150869,"byte_end":150880,"line_start":50,"line_end":50,"column_start":8,"column_end":19},"name":"count_zeros","qualname":"::int::PrimInt::count_zeros","value":"fn (self) -> u32","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":151176,"byte_end":151189,"line_start":64,"line_end":64,"column_start":8,"column_end":21},"name":"leading_zeros","qualname":"::int::PrimInt::leading_zeros","value":"fn (self) -> u32","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":151486,"byte_end":151500,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"trailing_zeros","qualname":"::int::PrimInt::trailing_zeros","value":"fn (self) -> u32","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":151895,"byte_end":151906,"line_start":93,"line_end":93,"column_start":8,"column_end":19},"name":"rotate_left","qualname":"::int::PrimInt::rotate_left","value":"fn (self, n: u32) -> Self","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":152318,"byte_end":152330,"line_start":108,"line_end":108,"column_start":8,"column_end":20},"name":"rotate_right","qualname":"::int::PrimInt::rotate_right","value":"fn (self, n: u32) -> Self","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":152773,"byte_end":152783,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"signed_shl","qualname":"::int::PrimInt::signed_shl","value":"fn (self, n: u32) -> Self","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":153259,"byte_end":153269,"line_start":142,"line_end":142,"column_start":8,"column_end":18},"name":"signed_shr","qualname":"::int::PrimInt::signed_shr","value":"fn (self, n: u32) -> Self","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":153716,"byte_end":153728,"line_start":159,"line_end":159,"column_start":8,"column_end":20},"name":"unsigned_shl","qualname":"::int::PrimInt::unsigned_shl","value":"fn (self, n: u32) -> Self","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":154175,"byte_end":154187,"line_start":176,"line_end":176,"column_start":8,"column_end":20},"name":"unsigned_shr","qualname":"::int::PrimInt::unsigned_shr","value":"fn (self, n: u32) -> Self","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":154492,"byte_end":154502,"line_start":190,"line_end":190,"column_start":8,"column_end":18},"name":"swap_bytes","qualname":"::int::PrimInt::swap_bytes","value":"fn (self) -> Self","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":154998,"byte_end":155005,"line_start":209,"line_end":209,"column_start":8,"column_end":15},"name":"from_be","qualname":"::int::PrimInt::from_be","value":"fn (x: Self) -> Self","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":155510,"byte_end":155517,"line_start":228,"line_end":228,"column_start":8,"column_end":15},"name":"from_le","qualname":"::int::PrimInt::from_le","value":"fn (x: Self) -> Self","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":156000,"byte_end":156005,"line_start":247,"line_end":247,"column_start":8,"column_end":13},"name":"to_be","qualname":"::int::PrimInt::to_be","value":"fn (self) -> Self","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":156491,"byte_end":156496,"line_start":266,"line_end":266,"column_start":8,"column_end":13},"name":"to_le","qualname":"::int::PrimInt::to_le","value":"fn (self) -> Self","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":156734,"byte_end":156737,"line_start":277,"line_end":277,"column_start":8,"column_end":11},"name":"pow","qualname":"::int::PrimInt::pow","value":"fn (self, exp: u32) -> Self","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":990},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pow","qualname":"::pow","value":"/home/zhang/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.4/src/pow.rs","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":1002},{"krate":0,"index":1008},{"krate":0,"index":5120},{"krate":0,"index":5126},{"krate":0,"index":5132},{"krate":0,"index":5138},{"krate":0,"index":5144},{"krate":0,"index":5150},{"krate":0,"index":5156},{"krate":0,"index":5162},{"krate":0,"index":5168},{"krate":0,"index":5174},{"krate":0,"index":5180},{"krate":0,"index":5186},{"krate":0,"index":5192},{"krate":0,"index":5198},{"krate":0,"index":5204},{"krate":0,"index":5210},{"krate":0,"index":5216},{"krate":0,"index":5222},{"krate":0,"index":5228},{"krate":0,"index":5234},{"krate":0,"index":5240},{"krate":0,"index":5246},{"krate":0,"index":5252},{"krate":0,"index":5258},{"krate":0,"index":5264},{"krate":0,"index":5270},{"krate":0,"index":5276},{"krate":0,"index":5282},{"krate":0,"index":5288},{"krate":0,"index":5294},{"krate":0,"index":5300},{"krate":0,"index":5306},{"krate":0,"index":5312},{"krate":0,"index":5318},{"krate":0,"index":5324},{"krate":0,"index":5330},{"krate":0,"index":5336},{"krate":0,"index":5342},{"krate":0,"index":5348},{"krate":0,"index":5354},{"krate":0,"index":5360},{"krate":0,"index":5366},{"krate":0,"index":5372},{"krate":0,"index":5378},{"krate":0,"index":5384},{"krate":0,"index":5390},{"krate":0,"index":5396},{"krate":0,"index":5402},{"krate":0,"index":5408},{"krate":0,"index":5414},{"krate":0,"index":5420},{"krate":0,"index":5426},{"krate":0,"index":5432},{"krate":0,"index":5438},{"krate":0,"index":5444},{"krate":0,"index":5450},{"krate":0,"index":5456},{"krate":0,"index":5462},{"krate":0,"index":5468},{"krate":0,"index":5474},{"krate":0,"index":5480},{"krate":0,"index":5486},{"krate":0,"index":5492},{"krate":0,"index":5498},{"krate":0,"index":5504},{"krate":0,"index":5510},{"krate":0,"index":5516},{"krate":0,"index":5522},{"krate":0,"index":5528},{"krate":0,"index":5534},{"krate":0,"index":5540},{"krate":0,"index":5546},{"krate":0,"index":5552},{"krate":0,"index":5558},{"krate":0,"index":5564},{"krate":0,"index":5570},{"krate":0,"index":5576},{"krate":0,"index":5582},{"krate":0,"index":5588},{"krate":0,"index":5594},{"krate":0,"index":5600},{"krate":0,"index":5606},{"krate":0,"index":5612},{"krate":0,"index":5618},{"krate":0,"index":5624},{"krate":0,"index":5630},{"krate":0,"index":5636},{"krate":0,"index":5642},{"krate":0,"index":5648},{"krate":0,"index":5654},{"krate":0,"index":5660},{"krate":0,"index":5666},{"krate":0,"index":5672},{"krate":0,"index":5678},{"krate":0,"index":5684},{"krate":0,"index":5690},{"krate":0,"index":5696},{"krate":0,"index":5702},{"krate":0,"index":5708},{"krate":0,"index":5714},{"krate":0,"index":5720},{"krate":0,"index":5726},{"krate":0,"index":5732},{"krate":0,"index":5738},{"krate":0,"index":5744},{"krate":0,"index":5750},{"krate":0,"index":5756},{"krate":0,"index":5762},{"krate":0,"index":5768},{"krate":0,"index":5774},{"krate":0,"index":5780},{"krate":0,"index":5786},{"krate":0,"index":5792},{"krate":0,"index":5798},{"krate":0,"index":5804},{"krate":0,"index":5810},{"krate":0,"index":5816},{"krate":0,"index":5822},{"krate":0,"index":5828},{"krate":0,"index":5834},{"krate":0,"index":5840},{"krate":0,"index":5846},{"krate":0,"index":5852},{"krate":0,"index":5858},{"krate":0,"index":5864},{"krate":0,"index":5870},{"krate":0,"index":5876},{"krate":0,"index":5882},{"krate":0,"index":5888},{"krate":0,"index":5894},{"krate":0,"index":5900},{"krate":0,"index":5906},{"krate":0,"index":5912},{"krate":0,"index":5918},{"krate":0,"index":5924},{"krate":0,"index":5930},{"krate":0,"index":5936},{"krate":0,"index":5942},{"krate":0,"index":5948},{"krate":0,"index":5954},{"krate":0,"index":5960},{"krate":0,"index":5966},{"krate":0,"index":5972},{"krate":0,"index":5978},{"krate":0,"index":5984},{"krate":0,"index":5990},{"krate":0,"index":5996},{"krate":0,"index":6002},{"krate":0,"index":6008},{"krate":0,"index":6014},{"krate":0,"index":6020},{"krate":0,"index":6026},{"krate":0,"index":6032},{"krate":0,"index":6038},{"krate":0,"index":6044},{"krate":0,"index":6050},{"krate":0,"index":6056},{"krate":0,"index":6062},{"krate":0,"index":6068},{"krate":0,"index":6074},{"krate":0,"index":6080},{"krate":0,"index":6086},{"krate":0,"index":6092},{"krate":0,"index":6098},{"krate":0,"index":6104},{"krate":0,"index":6110},{"krate":0,"index":6116},{"krate":0,"index":6122},{"krate":0,"index":6128},{"krate":0,"index":6134},{"krate":0,"index":6140},{"krate":0,"index":6146},{"krate":0,"index":6152},{"krate":0,"index":6158},{"krate":0,"index":6164},{"krate":0,"index":6170},{"krate":0,"index":6176},{"krate":0,"index":6182},{"krate":0,"index":6188},{"krate":0,"index":6194},{"krate":0,"index":6200},{"krate":0,"index":6206},{"krate":0,"index":6212},{"krate":0,"index":6218},{"krate":0,"index":6224},{"krate":0,"index":6230},{"krate":0,"index":6236},{"krate":0,"index":6242},{"krate":0,"index":6248},{"krate":0,"index":6254},{"krate":0,"index":6260},{"krate":0,"index":6266},{"krate":0,"index":6272},{"krate":0,"index":6278},{"krate":0,"index":6284},{"krate":0,"index":6290},{"krate":0,"index":6296},{"krate":0,"index":6302},{"krate":0,"index":6308},{"krate":0,"index":6314},{"krate":0,"index":6320},{"krate":0,"index":6326},{"krate":0,"index":6332},{"krate":0,"index":6338},{"krate":0,"index":6344},{"krate":0,"index":6350},{"krate":0,"index":6356},{"krate":0,"index":6362},{"krate":0,"index":6368},{"krate":0,"index":6374},{"krate":0,"index":6380},{"krate":0,"index":6386},{"krate":0,"index":6392},{"krate":0,"index":6398},{"krate":0,"index":6404},{"krate":0,"index":6410},{"krate":0,"index":6416},{"krate":0,"index":6422},{"krate":0,"index":6428},{"krate":0,"index":6434},{"krate":0,"index":6440},{"krate":0,"index":6446},{"krate":0,"index":6452},{"krate":0,"index":6458},{"krate":0,"index":6464},{"krate":0,"index":6470},{"krate":0,"index":6476},{"krate":0,"index":6482},{"krate":0,"index":6488},{"krate":0,"index":6494},{"krate":0,"index":6500},{"krate":0,"index":6506},{"krate":0,"index":6512},{"krate":0,"index":6518},{"krate":0,"index":6524},{"krate":0,"index":6530},{"krate":0,"index":6536},{"krate":0,"index":6542},{"krate":0,"index":6548},{"krate":0,"index":6554},{"krate":0,"index":6560},{"krate":0,"index":6566},{"krate":0,"index":6572},{"krate":0,"index":6578},{"krate":0,"index":6584},{"krate":0,"index":6590},{"krate":0,"index":6596},{"krate":0,"index":6602},{"krate":0,"index":6608},{"krate":0,"index":6614},{"krate":0,"index":6620},{"krate":0,"index":6626},{"krate":0,"index":6632},{"krate":0,"index":6638},{"krate":0,"index":6644},{"krate":0,"index":6650},{"krate":0,"index":6656},{"krate":0,"index":6662},{"krate":0,"index":6668},{"krate":0,"index":6674},{"krate":0,"index":6680},{"krate":0,"index":6686},{"krate":0,"index":6692},{"krate":0,"index":6698},{"krate":0,"index":6704},{"krate":0,"index":6710},{"krate":0,"index":6716},{"krate":0,"index":6722},{"krate":0,"index":6728},{"krate":0,"index":6734},{"krate":0,"index":6740},{"krate":0,"index":6746},{"krate":0,"index":6752},{"krate":0,"index":6758},{"krate":0,"index":6764},{"krate":0,"index":6770},{"krate":0,"index":6776},{"krate":0,"index":6782},{"krate":0,"index":6788},{"krate":0,"index":6794},{"krate":0,"index":6800},{"krate":0,"index":6806},{"krate":0,"index":6812},{"krate":0,"index":6818},{"krate":0,"index":6824},{"krate":0,"index":6830},{"krate":0,"index":6836},{"krate":0,"index":6842},{"krate":0,"index":1010},{"krate":0,"index":1014},{"krate":0,"index":1016}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1002},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":159452,"byte_end":159455,"line_start":6,"line_end":6,"column_start":11,"column_end":14},"name":"Pow","qualname":"::pow::Pow","value":"Pow<RHS>","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1006}],"decl_id":null,"docs":" Binary operator for raising a value to a power.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1004},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":159520,"byte_end":159526,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Output","qualname":"::pow::Pow::Output","value":"type Output;","parent":{"krate":0,"index":1002},"children":[],"decl_id":null,"docs":" The result after applying the operator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":159715,"byte_end":159718,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"pow","qualname":"::pow::Pow::pow","value":"fn (self, rhs: RHS) -> Self::Output","parent":{"krate":0,"index":1002},"children":[],"decl_id":null,"docs":" Binary operator for raising a value to a power.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1014},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":164209,"byte_end":164212,"line_start":185,"line_end":185,"column_start":8,"column_end":11},"name":"pow","qualname":"::pow::pow","value":"fn <T> (mut base: T, mut exp: usize) -> T","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, using exponentiation by squaring.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":164192,"byte_end":164201,"line_start":184,"line_end":184,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1016},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":165009,"byte_end":165020,"line_start":219,"line_end":219,"column_start":8,"column_end":19},"name":"checked_pow","qualname":"::pow::checked_pow","value":"fn <T> (mut base: T, mut exp: usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":164992,"byte_end":165001,"line_start":218,"line_end":218,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":1020},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1974,"byte_end":1977,"line_start":63,"line_end":63,"column_start":11,"column_end":14},"name":"Num","qualname":"::Num","value":"Num: PartialEq + Zero + One + NumOps","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1024}],"decl_id":null,"docs":" The base trait for numeric types, covering `0` and `1` values,\n comparisons, basic numeric operations, and string conversion.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1022},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2022,"byte_end":2037,"line_start":65,"line_end":65,"column_start":10,"column_end":25},"name":"FromStrRadixErr","qualname":"::Num::FromStrRadixErr","value":"type FromStrRadixErr;","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2395,"byte_end":2409,"line_start":80,"line_end":80,"column_start":8,"column_end":22},"name":"from_str_radix","qualname":"::Num::from_str_radix","value":"fn (str: &str, radix: u32) -> Result<Self, Self::FromStrRadixErr>","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" The base trait for numeric types, covering `0` and `1` values,\n comparisons, basic numeric operations, and string conversion.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1026},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2631,"byte_end":2637,"line_start":86,"line_end":86,"column_start":11,"column_end":17},"name":"NumOps","qualname":"::NumOps","value":"NumOps<Rhs = Self, Output = Self>: Add<Rhs, Output = Output> + Sub<Rhs, Output = Output> + Mul<Rhs, Output =\nOutput> + Div<Rhs, Output = Output> + Rem<Rhs, Output = Output>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing basic numeric operations","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1030},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3262,"byte_end":3268,"line_start":106,"line_end":106,"column_start":11,"column_end":17},"name":"NumRef","qualname":"::NumRef","value":"NumRef: Num + for<'r> NumOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement numeric operations taking\n the second operand by reference.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1034},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3587,"byte_end":3593,"line_start":113,"line_end":113,"column_start":11,"column_end":17},"name":"RefNum","qualname":"::RefNum","value":"RefNum<Base>: NumOps<Base, Base> + for<'r> NumOps<&'r Base, Base>","parent":null,"children":[],"decl_id":null,"docs":" The trait for references which implement numeric operations, taking the\n second operand either by value or by reference.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1038},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3926,"byte_end":3938,"line_start":119,"line_end":119,"column_start":11,"column_end":23},"name":"NumAssignOps","qualname":"::NumAssignOps","value":"NumAssignOps<Rhs = Self>: AddAssign<Rhs> + SubAssign<Rhs> + MulAssign<Rhs> + DivAssign<Rhs> +\nRemAssign<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing numeric assignment operators (like `+=`).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1042},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4387,"byte_end":4396,"line_start":138,"line_end":138,"column_start":11,"column_end":20},"name":"NumAssign","qualname":"::NumAssign","value":"NumAssign: Num + NumAssignOps","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement assignment operators.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1046},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4692,"byte_end":4704,"line_start":145,"line_end":145,"column_start":11,"column_end":23},"name":"NumAssignRef","qualname":"::NumAssignRef","value":"NumAssignRef: NumAssign + for<'r> NumAssignOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `NumAssign` types which also implement assignment operations\n taking the second operand by reference.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1273},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5813,"byte_end":5818,"line_start":180,"line_end":180,"column_start":5,"column_end":10},"name":"Empty","qualname":"::FloatErrorKind::Empty","value":"FloatErrorKind::Empty","parent":{"krate":0,"index":7232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1275},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5824,"byte_end":5831,"line_start":181,"line_end":181,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::FloatErrorKind::Invalid","value":"FloatErrorKind::Invalid","parent":{"krate":0,"index":7232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7232},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5792,"byte_end":5806,"line_start":179,"line_end":179,"column_start":10,"column_end":24},"name":"FloatErrorKind","qualname":"::FloatErrorKind","value":"FloatErrorKind::{Empty, Invalid}","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1275}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7238},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5989,"byte_end":6004,"line_start":186,"line_end":186,"column_start":12,"column_end":27},"name":"ParseFloatError","qualname":"::ParseFloatError","value":"ParseFloatError { kind }","parent":null,"children":[{"krate":0,"index":1277}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1277},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6015,"byte_end":6019,"line_start":187,"line_end":187,"column_start":9,"column_end":13},"name":"kind","qualname":"::ParseFloatError::kind","value":"FloatErrorKind","parent":{"krate":0,"index":7238},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1064},"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14070,"byte_end":14075,"line_start":368,"line_end":368,"column_start":8,"column_end":13},"name":"clamp","qualname":"::clamp","value":"fn <T> (input: T, min: T, max: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A value bounded by a minimum and a maximum","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14053,"byte_end":14062,"line_start":367,"line_end":367,"column_start":1,"column_end":10}}]}],"impls":[{"id":14,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":19065,"byte_end":19073,"line_start":58,"line_end":58,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":20743,"byte_end":20751,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":24123,"byte_end":24131,"line_start":80,"line_end":80,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":27347,"byte_end":27355,"line_start":192,"line_end":192,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":42315,"byte_end":42323,"line_start":93,"line_end":93,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":42510,"byte_end":42518,"line_start":98,"line_end":98,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":42705,"byte_end":42713,"line_start":103,"line_end":103,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,98,111,117,110,100,115,46,114,115],"byte_start":49789,"byte_end":49797,"line_start":45,"line_end":45,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":125457,"byte_end":125458,"line_start":784,"line_end":784,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2690},{"krate":0,"index":2692},{"krate":0,"index":2694},{"krate":0,"index":2696},{"krate":0,"index":2698},{"krate":0,"index":2700},{"krate":0,"index":2702},{"krate":0,"index":2704},{"krate":0,"index":2706},{"krate":0,"index":2708},{"krate":0,"index":2710},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2716},{"krate":0,"index":2718},{"krate":0,"index":2720},{"krate":0,"index":2722},{"krate":0,"index":2724},{"krate":0,"index":2726},{"krate":0,"index":2728},{"krate":0,"index":2730},{"krate":0,"index":2732},{"krate":0,"index":2734},{"krate":0,"index":2736},{"krate":0,"index":2738},{"krate":0,"index":2740},{"krate":0,"index":2742},{"krate":0,"index":2744},{"krate":0,"index":2746},{"krate":0,"index":2748},{"krate":0,"index":2750},{"krate":0,"index":2752},{"krate":0,"index":2754},{"krate":0,"index":2756},{"krate":0,"index":2758},{"krate":0,"index":2760},{"krate":0,"index":2762},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2770},{"krate":0,"index":2772},{"krate":0,"index":2774},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":144319,"byte_end":144327,"line_start":511,"line_end":511,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3712},{"krate":0,"index":3714},{"krate":0,"index":3716},{"krate":0,"index":3718},{"krate":0,"index":3720},{"krate":0,"index":3722},{"krate":0,"index":3724},{"krate":0,"index":3726},{"krate":0,"index":3728},{"krate":0,"index":3730},{"krate":0,"index":3732},{"krate":0,"index":3734},{"krate":0,"index":3736},{"krate":0,"index":3738}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":145095,"byte_end":145103,"line_start":544,"line_end":544,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3740},{"krate":0,"index":3742},{"krate":0,"index":3744},{"krate":0,"index":3746},{"krate":0,"index":3748},{"krate":0,"index":3750},{"krate":0,"index":3752},{"krate":0,"index":3754},{"krate":0,"index":3756},{"krate":0,"index":3758},{"krate":0,"index":3760},{"krate":0,"index":3762},{"krate":0,"index":3764},{"krate":0,"index":3766}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":147035,"byte_end":147043,"line_start":621,"line_end":621,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162766,"byte_end":162774,"line_start":128,"line_end":128,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6274},{"krate":0,"index":6276}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162766,"byte_end":162774,"line_start":128,"line_end":128,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6280},{"krate":0,"index":6282}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162766,"byte_end":162774,"line_start":128,"line_end":128,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6298},{"krate":0,"index":6300}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162766,"byte_end":162774,"line_start":128,"line_end":128,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6304},{"krate":0,"index":6306}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162791,"byte_end":162799,"line_start":129,"line_end":129,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6322},{"krate":0,"index":6324}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162791,"byte_end":162799,"line_start":129,"line_end":129,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6328},{"krate":0,"index":6330}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162791,"byte_end":162799,"line_start":129,"line_end":129,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6346},{"krate":0,"index":6348}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162791,"byte_end":162799,"line_start":129,"line_end":129,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6352},{"krate":0,"index":6354}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162816,"byte_end":162824,"line_start":130,"line_end":130,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6370},{"krate":0,"index":6372}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162816,"byte_end":162824,"line_start":130,"line_end":130,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6376},{"krate":0,"index":6378}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162816,"byte_end":162824,"line_start":130,"line_end":130,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6394},{"krate":0,"index":6396}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162816,"byte_end":162824,"line_start":130,"line_end":130,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6400},{"krate":0,"index":6402}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162842,"byte_end":162850,"line_start":131,"line_end":131,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6418},{"krate":0,"index":6420}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162842,"byte_end":162850,"line_start":131,"line_end":131,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6424},{"krate":0,"index":6426}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162842,"byte_end":162850,"line_start":131,"line_end":131,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6442},{"krate":0,"index":6444}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162842,"byte_end":162850,"line_start":131,"line_end":131,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6448},{"krate":0,"index":6450}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162868,"byte_end":162876,"line_start":132,"line_end":132,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6466},{"krate":0,"index":6468}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162868,"byte_end":162876,"line_start":132,"line_end":132,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6472},{"krate":0,"index":6474}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162868,"byte_end":162876,"line_start":132,"line_end":132,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6490},{"krate":0,"index":6492}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162868,"byte_end":162876,"line_start":132,"line_end":132,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6496},{"krate":0,"index":6498}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162894,"byte_end":162902,"line_start":133,"line_end":133,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6514},{"krate":0,"index":6516}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162894,"byte_end":162902,"line_start":133,"line_end":133,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6520},{"krate":0,"index":6522}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162894,"byte_end":162902,"line_start":133,"line_end":133,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6538},{"krate":0,"index":6540}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162894,"byte_end":162902,"line_start":133,"line_end":133,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6544},{"krate":0,"index":6546}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162920,"byte_end":162928,"line_start":134,"line_end":134,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6562},{"krate":0,"index":6564}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162920,"byte_end":162928,"line_start":134,"line_end":134,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6568},{"krate":0,"index":6570}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162920,"byte_end":162928,"line_start":134,"line_end":134,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6586},{"krate":0,"index":6588}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162920,"byte_end":162928,"line_start":134,"line_end":134,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6592},{"krate":0,"index":6594}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162946,"byte_end":162954,"line_start":135,"line_end":135,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6610},{"krate":0,"index":6612}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162946,"byte_end":162954,"line_start":135,"line_end":135,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6616},{"krate":0,"index":6618}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162946,"byte_end":162954,"line_start":135,"line_end":135,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6634},{"krate":0,"index":6636}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162946,"byte_end":162954,"line_start":135,"line_end":135,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6640},{"krate":0,"index":6642}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162989,"byte_end":162997,"line_start":137,"line_end":137,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6658},{"krate":0,"index":6660}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162989,"byte_end":162997,"line_start":137,"line_end":137,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6664},{"krate":0,"index":6666}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162989,"byte_end":162997,"line_start":137,"line_end":137,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6682},{"krate":0,"index":6684}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162989,"byte_end":162997,"line_start":137,"line_end":137,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6688},{"krate":0,"index":6690}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163033,"byte_end":163041,"line_start":139,"line_end":139,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6706},{"krate":0,"index":6708}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163033,"byte_end":163041,"line_start":139,"line_end":139,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6712},{"krate":0,"index":6714}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163033,"byte_end":163041,"line_start":139,"line_end":139,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6730},{"krate":0,"index":6732}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163033,"byte_end":163041,"line_start":139,"line_end":139,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6736},{"krate":0,"index":6738}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163060,"byte_end":163068,"line_start":140,"line_end":140,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6754},{"krate":0,"index":6756}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163060,"byte_end":163068,"line_start":140,"line_end":140,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6760},{"krate":0,"index":6762}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163060,"byte_end":163068,"line_start":140,"line_end":140,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6778},{"krate":0,"index":6780}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163060,"byte_end":163068,"line_start":140,"line_end":140,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6784},{"krate":0,"index":6786}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163088,"byte_end":163096,"line_start":141,"line_end":141,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6802},{"krate":0,"index":6804}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163088,"byte_end":163096,"line_start":141,"line_end":141,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6808},{"krate":0,"index":6810}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163088,"byte_end":163096,"line_start":141,"line_end":141,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6826},{"krate":0,"index":6828}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163088,"byte_end":163096,"line_start":141,"line_end":141,"column_start":11,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6832},{"krate":0,"index":6834}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2874,"byte_end":2875,"line_start":94,"line_end":94,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3323,"byte_end":3324,"line_start":107,"line_end":107,"column_start":20,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3687,"byte_end":3688,"line_start":114,"line_end":114,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4095,"byte_end":4096,"line_start":127,"line_end":127,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4442,"byte_end":4443,"line_start":139,"line_end":139,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4777,"byte_end":4778,"line_start":146,"line_end":146,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5378,"byte_end":5386,"line_start":166,"line_end":166,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6062,"byte_end":6077,"line_start":190,"line_end":190,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1682,"byte_end":1692,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":128}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1702,"byte_end":1706,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":168}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1716,"byte_end":1719,"line_start":52,"line_end":52,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":218}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,109,111,100,46,114,115],"byte_start":27818,"byte_end":27828,"line_start":1,"line_end":1,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":220}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,109,111,100,46,114,115],"byte_start":27838,"byte_end":27845,"line_start":2,"line_end":2,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":230}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,109,111,100,46,114,115],"byte_start":27855,"byte_end":27863,"line_start":3,"line_end":3,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":286}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,109,111,100,46,114,115],"byte_start":27873,"byte_end":27876,"line_start":4,"line_end":4,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":324}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,109,111,100,46,114,115],"byte_start":27886,"byte_end":27893,"line_start":5,"line_end":5,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":356}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1729,"byte_end":1735,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":392}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1745,"byte_end":1750,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":452}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1784,"byte_end":1788,"line_start":56,"line_end":56,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":664}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1798,"byte_end":1802,"line_start":57,"line_end":57,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":774}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1812,"byte_end":1815,"line_start":58,"line_end":58,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":926}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1825,"byte_end":1828,"line_start":59,"line_end":59,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":990}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":17818,"byte_end":17823,"line_start":5,"line_end":5,"column_start":17,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":138}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":17826,"byte_end":17829,"line_start":5,"line_end":5,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":1818},"to":{"krate":0,"index":138}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":19065,"byte_end":19073,"line_start":58,"line_end":58,"column_start":24,"column_end":32},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":138}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":19320,"byte_end":19325,"line_start":69,"line_end":69,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":152}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":19328,"byte_end":19331,"line_start":69,"line_end":69,"column_start":24,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":1834},"to":{"krate":0,"index":152}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":20743,"byte_end":20751,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":152}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":22035,"byte_end":22040,"line_start":8,"line_end":8,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":178}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":22043,"byte_end":22046,"line_start":8,"line_end":8,"column_start":27,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":1020},"to":{"krate":0,"index":178}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":22049,"byte_end":22052,"line_start":8,"line_end":8,"column_start":33,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":1862},"to":{"krate":0,"index":178}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":24123,"byte_end":24131,"line_start":80,"line_end":80,"column_start":28,"column_end":36},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":178}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":27087,"byte_end":27090,"line_start":180,"line_end":180,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":1020},"to":{"krate":0,"index":212}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":27347,"byte_end":27355,"line_start":192,"line_end":192,"column_start":32,"column_end":40},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":212}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":28986,"byte_end":28991,"line_start":5,"line_end":5,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":248}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":28994,"byte_end":28997,"line_start":5,"line_end":5,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":1818},"to":{"krate":0,"index":248}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":30124,"byte_end":30129,"line_start":39,"line_end":39,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":254}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":30132,"byte_end":30135,"line_start":39,"line_end":39,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":1826},"to":{"krate":0,"index":254}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":31025,"byte_end":31030,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":258}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":31033,"byte_end":31036,"line_start":63,"line_end":63,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":1834},"to":{"krate":0,"index":258}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":31991,"byte_end":31996,"line_start":87,"line_end":87,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":262}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":31999,"byte_end":32002,"line_start":87,"line_end":87,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":1842},"to":{"krate":0,"index":262}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":32976,"byte_end":32981,"line_start":111,"line_end":111,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":266}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":32984,"byte_end":32987,"line_start":111,"line_end":111,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":1852},"to":{"krate":0,"index":266}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":34754,"byte_end":34759,"line_start":162,"line_end":162,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":272}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":36174,"byte_end":36179,"line_start":199,"line_end":199,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":276}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":36182,"byte_end":36185,"line_start":199,"line_end":199,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":1938},"to":{"krate":0,"index":276}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":37750,"byte_end":37755,"line_start":244,"line_end":244,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":282}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":37758,"byte_end":37761,"line_start":244,"line_end":244,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":1948},"to":{"krate":0,"index":282}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":39610,"byte_end":39615,"line_start":24,"line_end":24,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":300}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":39618,"byte_end":39621,"line_start":24,"line_end":24,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":1818},"to":{"krate":0,"index":300}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":40502,"byte_end":40507,"line_start":47,"line_end":47,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":304}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":40510,"byte_end":40513,"line_start":47,"line_end":47,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":1826},"to":{"krate":0,"index":304}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":41400,"byte_end":41405,"line_start":70,"line_end":70,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":308}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":41408,"byte_end":41411,"line_start":70,"line_end":70,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":1834},"to":{"krate":0,"index":308}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":42315,"byte_end":42323,"line_start":93,"line_end":93,"column_start":38,"column_end":46},"kind":{"variant":"Impl","fields":[190]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":300}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":42510,"byte_end":42518,"line_start":98,"line_end":98,"column_start":38,"column_end":46},"kind":{"variant":"Impl","fields":[191]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":304}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":42705,"byte_end":42713,"line_start":103,"line_end":103,"column_start":38,"column_end":46},"kind":{"variant":"Impl","fields":[192]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":308}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,98,111,117,110,100,115,46,114,115],"byte_start":49789,"byte_end":49797,"line_start":45,"line_end":45,"column_start":30,"column_end":38},"kind":{"variant":"Impl","fields":[235]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":432}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":51948,"byte_end":51951,"line_start":13,"line_end":13,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":1020},"to":{"krate":0,"index":472}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":51954,"byte_end":51961,"line_start":13,"line_end":13,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":910},"to":{"krate":0,"index":472}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":51964,"byte_end":51967,"line_start":13,"line_end":13,"column_start":38,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":1862},"to":{"krate":0,"index":472}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":51985,"byte_end":51995,"line_start":13,"line_end":13,"column_start":59,"column_end":69},"kind":"SuperTrait","from":{"krate":1,"index":2484},"to":{"krate":0,"index":472}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":51998,"byte_end":52002,"line_start":13,"line_end":13,"column_start":72,"column_end":76},"kind":"SuperTrait","from":{"krate":1,"index":1780},"to":{"krate":0,"index":472}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75232,"byte_end":75235,"line_start":891,"line_end":891,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":1020},"to":{"krate":0,"index":540}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75242,"byte_end":75246,"line_start":892,"line_end":892,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1780},"to":{"krate":0,"index":540}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75253,"byte_end":75260,"line_start":893,"line_end":893,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":910},"to":{"krate":0,"index":540}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75267,"byte_end":75277,"line_start":894,"line_end":894,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":2484},"to":{"krate":0,"index":540}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":75284,"byte_end":75287,"line_start":895,"line_end":895,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":1862},"to":{"krate":0,"index":540}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":105905,"byte_end":105908,"line_start":16,"line_end":16,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":1020},"to":{"krate":0,"index":676}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":105915,"byte_end":105919,"line_start":17,"line_end":17,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1780},"to":{"krate":0,"index":676}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":105926,"byte_end":105933,"line_start":18,"line_end":18,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":910},"to":{"krate":0,"index":676}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":105940,"byte_end":105950,"line_start":19,"line_end":19,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":2484},"to":{"krate":0,"index":676}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":105957,"byte_end":105960,"line_start":20,"line_end":20,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":1862},"to":{"krate":0,"index":676}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,114,101,97,108,46,114,115],"byte_start":125457,"byte_end":125458,"line_start":784,"line_end":784,"column_start":25,"column_end":26},"kind":{"variant":"Impl","fields":[240]},"from":{"krate":0,"index":57},"to":{"krate":0,"index":676}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":138379,"byte_end":138384,"line_start":353,"line_end":353,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":868}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":144319,"byte_end":144327,"line_start":511,"line_end":511,"column_start":38,"column_end":46},"kind":{"variant":"Impl","fields":[255]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":818}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":145095,"byte_end":145103,"line_start":544,"line_end":544,"column_start":42,"column_end":50},"kind":{"variant":"Impl","fields":[256]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":868}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":145939,"byte_end":145944,"line_start":584,"line_end":584,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":910}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":145947,"byte_end":145958,"line_start":584,"line_end":584,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":818},"to":{"krate":0,"index":910}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":147035,"byte_end":147043,"line_start":621,"line_end":621,"column_start":30,"column_end":38},"kind":{"variant":"Impl","fields":[271]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":910}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":148281,"byte_end":148285,"line_start":662,"line_end":662,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":1780},"to":{"krate":0,"index":920}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":149945,"byte_end":149950,"line_start":9,"line_end":9,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":1776},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":149957,"byte_end":149961,"line_start":10,"line_end":10,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1780},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":149968,"byte_end":149971,"line_start":11,"line_end":11,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":1020},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":149974,"byte_end":149981,"line_start":11,"line_end":11,"column_start":13,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":910},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":149988,"byte_end":149995,"line_start":12,"line_end":12,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":432},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":150002,"byte_end":150012,"line_start":13,"line_end":13,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":2484},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":150015,"byte_end":150018,"line_start":13,"line_end":13,"column_start":20,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":2466},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":150021,"byte_end":150023,"line_start":13,"line_end":13,"column_start":26,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2436},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":150030,"byte_end":150033,"line_start":14,"line_end":14,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":1906},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":150053,"byte_end":150059,"line_start":15,"line_end":15,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":1914},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":150079,"byte_end":150084,"line_start":16,"line_end":16,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":1922},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":150104,"byte_end":150110,"line_start":17,"line_end":17,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":1930},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":150130,"byte_end":150133,"line_start":18,"line_end":18,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":1938},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":150160,"byte_end":150163,"line_start":19,"line_end":19,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":1948},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":150190,"byte_end":150200,"line_start":20,"line_end":20,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":248},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":150220,"byte_end":150230,"line_start":21,"line_end":21,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":254},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":150250,"byte_end":150260,"line_start":22,"line_end":22,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":258},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":150280,"byte_end":150290,"line_start":23,"line_end":23,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":262},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,105,110,116,46,114,115],"byte_start":150310,"byte_end":150320,"line_start":24,"line_end":24,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":222},"to":{"krate":0,"index":954}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162766,"byte_end":162774,"line_start":128,"line_end":128,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[602]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162766,"byte_end":162774,"line_start":128,"line_end":128,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[603]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162766,"byte_end":162774,"line_start":128,"line_end":128,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[604]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162766,"byte_end":162774,"line_start":128,"line_end":128,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[605]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162791,"byte_end":162799,"line_start":129,"line_end":129,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[606]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162791,"byte_end":162799,"line_start":129,"line_end":129,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[607]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162791,"byte_end":162799,"line_start":129,"line_end":129,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[608]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162791,"byte_end":162799,"line_start":129,"line_end":129,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[609]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162816,"byte_end":162824,"line_start":130,"line_end":130,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[610]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162816,"byte_end":162824,"line_start":130,"line_end":130,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[611]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162816,"byte_end":162824,"line_start":130,"line_end":130,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[612]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162816,"byte_end":162824,"line_start":130,"line_end":130,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[613]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162842,"byte_end":162850,"line_start":131,"line_end":131,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[614]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162842,"byte_end":162850,"line_start":131,"line_end":131,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[615]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162842,"byte_end":162850,"line_start":131,"line_end":131,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[616]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162842,"byte_end":162850,"line_start":131,"line_end":131,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[617]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162868,"byte_end":162876,"line_start":132,"line_end":132,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[618]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162868,"byte_end":162876,"line_start":132,"line_end":132,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[619]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162868,"byte_end":162876,"line_start":132,"line_end":132,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[620]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162868,"byte_end":162876,"line_start":132,"line_end":132,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[621]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162894,"byte_end":162902,"line_start":133,"line_end":133,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[622]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162894,"byte_end":162902,"line_start":133,"line_end":133,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[623]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162894,"byte_end":162902,"line_start":133,"line_end":133,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[624]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162894,"byte_end":162902,"line_start":133,"line_end":133,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[625]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162920,"byte_end":162928,"line_start":134,"line_end":134,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[626]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162920,"byte_end":162928,"line_start":134,"line_end":134,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[627]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162920,"byte_end":162928,"line_start":134,"line_end":134,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[628]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162920,"byte_end":162928,"line_start":134,"line_end":134,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[629]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162946,"byte_end":162954,"line_start":135,"line_end":135,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[630]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162946,"byte_end":162954,"line_start":135,"line_end":135,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[631]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162946,"byte_end":162954,"line_start":135,"line_end":135,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[632]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162946,"byte_end":162954,"line_start":135,"line_end":135,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[633]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162989,"byte_end":162997,"line_start":137,"line_end":137,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[634]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162989,"byte_end":162997,"line_start":137,"line_end":137,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[635]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162989,"byte_end":162997,"line_start":137,"line_end":137,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[636]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":162989,"byte_end":162997,"line_start":137,"line_end":137,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[637]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163033,"byte_end":163041,"line_start":139,"line_end":139,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[638]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163033,"byte_end":163041,"line_start":139,"line_end":139,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[639]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163033,"byte_end":163041,"line_start":139,"line_end":139,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[640]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163033,"byte_end":163041,"line_start":139,"line_end":139,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[641]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163060,"byte_end":163068,"line_start":140,"line_end":140,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[642]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163060,"byte_end":163068,"line_start":140,"line_end":140,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[643]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163060,"byte_end":163068,"line_start":140,"line_end":140,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[644]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163060,"byte_end":163068,"line_start":140,"line_end":140,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[645]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163088,"byte_end":163096,"line_start":141,"line_end":141,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[646]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163088,"byte_end":163096,"line_start":141,"line_end":141,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[647]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163088,"byte_end":163096,"line_start":141,"line_end":141,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[648]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,112,111,119,46,114,115],"byte_start":163088,"byte_end":163096,"line_start":141,"line_end":141,"column_start":11,"column_end":19},"kind":{"variant":"Impl","fields":[649]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1979,"byte_end":1988,"line_start":63,"line_end":63,"column_start":16,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":2430},"to":{"krate":0,"index":1020}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1991,"byte_end":1995,"line_start":63,"line_end":63,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":138},"to":{"krate":0,"index":1020}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1998,"byte_end":2001,"line_start":63,"line_end":63,"column_start":35,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":152},"to":{"krate":0,"index":1020}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2004,"byte_end":2010,"line_start":63,"line_end":63,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":1026},"to":{"krate":0,"index":1020}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2671,"byte_end":2674,"line_start":87,"line_end":87,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":1818},"to":{"krate":0,"index":1026}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2703,"byte_end":2706,"line_start":88,"line_end":88,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":1826},"to":{"krate":0,"index":1026}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2735,"byte_end":2738,"line_start":89,"line_end":89,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":1834},"to":{"krate":0,"index":1026}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2767,"byte_end":2770,"line_start":90,"line_end":90,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":1842},"to":{"krate":0,"index":1026}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2799,"byte_end":2802,"line_start":91,"line_end":91,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":1852},"to":{"krate":0,"index":1026}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2874,"byte_end":2875,"line_start":94,"line_end":94,"column_start":46,"column_end":47},"kind":{"variant":"Impl","fields":[676]},"from":{"krate":0,"index":105},"to":{"krate":0,"index":1026}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3270,"byte_end":3273,"line_start":106,"line_end":106,"column_start":19,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":1020},"to":{"krate":0,"index":1030}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3284,"byte_end":3290,"line_start":106,"line_end":106,"column_start":33,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":1026},"to":{"krate":0,"index":1030}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3323,"byte_end":3324,"line_start":107,"line_end":107,"column_start":20,"column_end":21},"kind":{"variant":"Impl","fields":[677]},"from":{"krate":0,"index":113},"to":{"krate":0,"index":1030}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3601,"byte_end":3607,"line_start":113,"line_end":113,"column_start":25,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":1026},"to":{"krate":0,"index":1034}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3630,"byte_end":3636,"line_start":113,"line_end":113,"column_start":54,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":1026},"to":{"krate":0,"index":1034}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3687,"byte_end":3688,"line_start":114,"line_end":114,"column_start":32,"column_end":33},"kind":{"variant":"Impl","fields":[678]},"from":{"krate":0,"index":121},"to":{"krate":0,"index":1034}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3957,"byte_end":3966,"line_start":120,"line_end":120,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":1874},"to":{"krate":0,"index":1038}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3978,"byte_end":3987,"line_start":121,"line_end":121,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":1880},"to":{"krate":0,"index":1038}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3999,"byte_end":4008,"line_start":122,"line_end":122,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":1886},"to":{"krate":0,"index":1038}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4020,"byte_end":4029,"line_start":123,"line_end":123,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":1892},"to":{"krate":0,"index":1038}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4041,"byte_end":4050,"line_start":124,"line_end":124,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":1898},"to":{"krate":0,"index":1038}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4095,"byte_end":4096,"line_start":127,"line_end":127,"column_start":36,"column_end":37},"kind":{"variant":"Impl","fields":[679]},"from":{"krate":0,"index":129},"to":{"krate":0,"index":1038}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4398,"byte_end":4401,"line_start":138,"line_end":138,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":1020},"to":{"krate":0,"index":1042}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4404,"byte_end":4416,"line_start":138,"line_end":138,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":1038},"to":{"krate":0,"index":1042}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4442,"byte_end":4443,"line_start":139,"line_end":139,"column_start":23,"column_end":24},"kind":{"variant":"Impl","fields":[680]},"from":{"krate":0,"index":133},"to":{"krate":0,"index":1042}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4706,"byte_end":4715,"line_start":145,"line_end":145,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":1042},"to":{"krate":0,"index":1046}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4726,"byte_end":4738,"line_start":145,"line_end":145,"column_start":45,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":1038},"to":{"krate":0,"index":1046}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4777,"byte_end":4778,"line_start":146,"line_end":146,"column_start":26,"column_end":27},"kind":{"variant":"Impl","fields":[681]},"from":{"krate":0,"index":137},"to":{"krate":0,"index":1046}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5378,"byte_end":5386,"line_start":166,"line_end":166,"column_start":22,"column_end":30},"kind":{"variant":"Impl","fields":[694]},"from":{"krate":1,"index":12288},"to":{"krate":0,"index":1020}},{"span":{"file_name":[47,104,111,109,101,47,122,104,97,110,103,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6062,"byte_end":6077,"line_start":190,"line_end":190,"column_start":23,"column_end":38},"kind":{"variant":"Impl","fields":[695]},"from":{"krate":0,"index":7238},"to":{"krate":1,"index":7600}}]}